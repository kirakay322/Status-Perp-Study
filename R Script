############################### Kira's Script ##################################

############################# PROLIFIC SAMPLE 1 ################################

### Set WD, then load in dataset and load packages -----------------------------
d <- read.csv("PSS_Prolific1_CLEAN.csv")
library(psych)
library(dplyr)
library(effectsize)
library(interactions)
library(sjPlot)

### Check it out ---------------------------------------------------------------
View(d)
describe(d)

### Convert Atonement to factor variable ---------------------------------------
d$Atonement_fact <- as.factor(d$Atonement)
levels(d$Atonement_fact)

### Reverse-code needed items --------------------------------------------------
## ESJ
d$ESJ4_r <- dplyr::recode(d$ESJ4, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ6_r <- dplyr::recode(d$ESJ6, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ8_r <- dplyr::recode(d$ESJ8, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ10_r <- dplyr::recode(d$ESJ10, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ13_r <- dplyr::recode(d$ESJ13, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ15_r <- dplyr::recode(d$ESJ15, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)
d$ESJ17_r <- dplyr::recode(d$ESJ17, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)

## Y4: Positive personality traits (P)
d$TIPI_P2_r <- dplyr::recode(d$TIPI_P2 , "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P4_r <- dplyr::recode(d$TIPI_P4, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P6_r <- dplyr::recode(d$TIPI_P6, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P8_r <- dplyr::recode(d$TIPI_P8, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P10_r <- dplyr::recode(d$TIPI_P10, "5" = 1, "4" = 2, "3" = 3, "2" = 4, 
                              "1" = 5)

## Y6: Severity
d$Sev3_r <- dplyr::recode(d$Sev3_r , "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 
                            4, "2" = 6, "1" = 7)
d$Sev4_r <- dplyr::recode(d$Sev4_r, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)

### Recode all Empathy (P) items to fix error ----------------------------------
## Empathy (P) was coded in Qualtrics as 1, 2, 3, 4, 6, 8, 7: Have to recode
d$P_empathy_1 <- dplyr::recode(d$P_empathy_1, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_2 <- dplyr::recode(d$P_empathy_2, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_3 <- dplyr::recode(d$P_empathy_3, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_4 <- dplyr::recode(d$P_empathy_4, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_5 <- dplyr::recode(d$P_empathy_5, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_6 <- dplyr::recode(d$P_empathy_6, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_7 <- dplyr::recode(d$P_empathy_7, "1" = 1, "2" = 2, "3" = 3, 
                            "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_8 <- dplyr::recode(d$P_empathy_8, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_9 <- dplyr::recode(d$P_empathy_9, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_10 <- dplyr::recode(d$P_empathy_10, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_11 <- dplyr::recode(d$P_empathy_11, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_12 <- dplyr::recode(d$P_empathy_12, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_13 <- dplyr::recode(d$P_empathy_13, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_14 <- dplyr::recode(d$P_empathy_14, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_15 <- dplyr::recode(d$P_empathy_15, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_16 <- dplyr::recode(d$P_empathy_16, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_17 <- dplyr::recode(d$P_empathy_17, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_18 <- dplyr::recode(d$P_empathy_18, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)

### Recode Like_P3 to fix error ------------------------------------------------
## Like_P3 was coded in Qualtrics as 1, 2, 3, 4, 12: Have to recode
d$Like_P3 <- dplyr::recode(d$Like_P3, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "12" = 5)

### Create average columns -----------------------------------------------------
## ESJ -------------------------------------------------------------------------
# Add average column
d$ESJ_av <- rowMeans(d[,c(2,3,4,125,6,126,9,127,11,128,13,14,129,16,130,18,
                          131)], na.rm = T)

# Create data frame from selected columns
ESJ_d <- d[,c(2,3,4,125,6,126,9,127,11,128,13,14,129,16,130,18,131)]

# Calculate Cronbach's alpha from new data frame
alpha(ESJ_d)

# Alpha for ESJ = .86

## Y1 = Blame (P)---------------------------------------------------------------

# STANDARDIZE ALL VARIABLES (they're on different scales)

# First, create dataframe from raw varialbes
BlameP_d <- d[,c(27,28,29,30,31,36,37)]

# Use scale to standardize that dataframe
BlameP_d_z <- scale(BlameP_d)

# Find average of standardized variables and add column to original df
d$BlameP_z_av <- rowMeans(BlameP_d_z[,c(1,2,3,4,5,6,7)], na.rm = T)

# Calculate Cronbach's alpha from raw dataframe
alpha(BlameP_d)

# Alpha for Blame (P) = .90

## Y2 = Stigma (P) -------------------------------------------------------------
# Add average column
d$StigmaP_av <- rowMeans(d[,c(38,39,40,41,42)], na.rm = T)

# Create data frame from selected columns
StigmaP_d <- d[,c(38,39,40,41,42)]

# Calculate Cronbach's alpha from new data frame
alpha(StigmaP_d)

# Alpha for Stigma (P) = .96

## Y3 = Likability (P) ---------------------------------------------------------
# Add average column
d$LikabilityP_av <- rowMeans(d[,c(53,54,55,56,57)], na.rm = T)

# Create data frame from selected columns
LikabilityP_d <- d[,c(53,54,55,56,57)]

# Calculate Cronbach's alpha from new data frame
alpha(LikabilityP_d)

# Alpha for Likability (P) = .85

## Y4 = Positive personality traits---------------------------------------------
# Add average column
d$PersonalityP_av <- rowMeans(d[,c(43,132,45,133,47,134,49,135,51,136)], 
                              na.rm = T)

# Create data frame from selected columns
PersonalityP_d <- d[,c(43,132,45,133,47,134,49,135,51,136)]

# Calculate Cronbach's alpha from new data frame
alpha(PersonalityP_d)

# Alpha for Personality (P) = .71

## Y5 = Empathic concern (P) ---------------------------------------------------
# Add average column
d$EmpathyP_av <- rowMeans(d[,c(58,59,62,67,72,74)], na.rm = T)

# Create data frame from selected columns
EmpathyP_d <- d[,c(58,59,62,67,72,74)]

# Calculate Cronbach's alpha from new data frame
alpha(EmpathyP_d)

# Alpha for Empathy (P) = .93

## Y6 = Severity (P) -----------------------------------------------------------
# Add average column
d$SeverityP_av <- rowMeans(d[,c(20,21,23,24,25)], na.rm = T)

# Create data frame from selected columns
SeverityP_d <- d[,c(20,21,23,24,25)]

# Calculate Cronbach's alpha from new data frame
alpha(SeverityP_d)

# Alpha for Severity (P) = .90

### Histograms and boxplots ----------------------------------------------------
## ESJ - Looks good
hist(d$ESJ_av)
boxplot(d$ESJ_av)

## Blame (P) - Three low outliers (rows = 108, 136, 158; value = -2.67 SDs; do 
## not remove)
hist(d$BlameP_z_av)
boxplot(d$BlameP_z_av)
boxplot.stats(d$BlameP_z_av)$out

## Stigma (P) - Looks good
hist(d$StigmaP_av)
boxplot(d$StigmaP_av)

## Likability (P) - Looks good
hist(d$LikabilityP_av)
boxplot(d$LikabilityP_av)

## Personality (P) - Two outliers high and two low (IDs = 9, 62, 68, 158; 
## values = 1.7 and 4.6)
hist(d$PersonalityP_av)
boxplot(d$PersonalityP_av)
boxplot.stats(d$PersonalityP_av)$out

# Find value for 3 SDs above the mean (value = 4.75)
mean(d$PersonalityP_av) + (3*sd(d$PersonalityP_av))

# Find value for 3 SDs below the mean (value = 1.62)
mean(d$PersonalityP_av) - (3*sd(d$PersonalityP_av))

# No values are outside of 3 SDs away from the mean: Don't remove

## Empathy (P) - Looks good
hist(d$EmpathyP_av)
boxplot(d$EmpathyP_av)

### Mean Center ESJ ------------------------------------------------------------
d$ESJ_av_c <- d$ESJ_av - mean(d$ESJ_av)

### Set up Helmert contrasts ---------------------------------------------------
## Reverse-code Atonement
d$Atonement_f_r <- dplyr::recode(d$Atonement_fact, "2" = 0, "1" = 1, "0" = 2)

## Change reverse-coded Atonement to factor variable
d$Atonement_fact_r <- as.factor(d$Atonement_f_r)

## Establish contrasts
my.contrasts <- list(Atonement_fact_r = contr.helmert)

### Split dataset by status condition ------------------------------------------
d_lo <- d[which(d$SES == "0"),]
d_hi <- d[which(d$SES == "1"),]

### MAIN ANALYSES - REGRESSION -------------------------------------------------
## RQ1A ------------------------------------------------------------------------
# Y1: Blame
RQ1A_Y1 <- lm(data = d_hi, BlameP_z_av ~ ESJ_av_c*Atonement_fact_r, contrasts = 
                my.contrasts)
summary(RQ1A_Y1)

#Y2: Stigma
RQ1A_Y2 <- lm(data = d_hi, StigmaP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y2)
eta_squared(car::Anova(RQ1A_Y2, type = 3))

#Y3: Likability
RQ1A_Y3 <- lm(data = d_hi, LikabilityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y3)
eta_squared(car::Anova(RQ1A_Y3, type = 3))

#Y4: Personality
RQ1A_Y4 <- lm(data = d_hi, PersonalityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y4)
eta_squared(car::Anova(RQ1A_Y4, type = 3))

#Y5: Empathy
RQ1A_Y5 <- lm(data = d_hi, EmpathyP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y5)
eta_squared(car::Anova(RQ1A_Y5, type = 3))

## RQ1B ------------------------------------------------------------------------
# Y1: Blame
RQ1B_Y1 <- lm(data = d_lo, BlameP_z_av ~ ESJ_av_c*Atonement_fact_r, contrasts = 
                my.contrasts)
summary(RQ1B_Y1)
eta_squared(car::Anova(RQ1B_Y1, type = 3))

#Y2: Stigma
RQ1B_Y2 <- lm(data = d_lo, StigmaP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y2)
eta_squared(car::Anova(RQ1B_Y2, type = 3))
plot_model(RQ1B_Y2, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c"))

#Y3: Likability
RQ1B_Y3 <- lm(data = d_lo, LikabilityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y3)
eta_squared(car::Anova(RQ1B_Y3, type = 3))
plot_model(RQ1B_Y3, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c"))

#Y4: Personality
RQ1B_Y4 <- lm(data = d_lo, PersonalityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y4)
eta_squared(car::Anova(RQ1B_Y4, type = 3))
plot_model(RQ1B_Y4, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c"))

#Y5: Empathy
RQ1B_Y5 <- lm(data = d_lo, EmpathyP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y5)
eta_squared(car::Anova(RQ1B_Y5, type = 3))

## Exploratory 3-way interaction -----------------------------------------------
# Y1: Blame
RQExp_Y1 <- lm(data = d, BlameP_z_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts = 
                my.contrasts)
summary(RQExp_Y1)
eta_squared(car::Anova(RQExp_Y1, type = 3))

#### FIX ESJ_av_c EVERYWHERE!!!!! ##############################################

#Y2: Stigma
RQExp_Y2 <- lm(data = d, StigmaP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                my.contrasts)
summary(RQExp_Y2)
eta_squared(car::Anova(RQExp_Y2, type = 3))
plot_model(RQExp_Y2, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c"))

#Y3: Likability
RQExp_Y3 <- lm(data = d, LikabilityP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                my.contrasts)
summary(RQExp_Y3)
eta_squared(car::Anova(RQExp_Y3, type = 3))
plot_model(RQExp_Y3, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c"))

#Y4: Personality
RQExp_Y4 <- lm(data = d, PersonalityP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                my.contrasts)
summary(RQExp_Y4)
eta_squared(car::Anova(RQExp_Y4, type = 3))
plot_model(RQExp_Y4, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c", "SES"))

#Y5: Empathy
RQExp_Y5 <- lm(data = d, EmpathyP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                my.contrasts)
summary(RQExp_Y5)
eta_squared(car::Anova(RQExp_Y5, type = 3))



############################# PROLIFIC SAMPLE 2 ################################

### Set WD, then load in dataset and load packages -----------------------------
d2 <- read.csv("PSS_Prolific2_CLEAN.csv")

### Check it out ---------------------------------------------------------------
View(d2)
describe(d2)

### Convert Atonement to factor variable ---------------------------------------
d2$Atonement_fact <- as.factor(d2$Atonement)
levels(d2$Atonement_fact)

### Reverse-code needed items --------------------------------------------------
## ESJ
d2$ESJ4_r <- dplyr::recode(d2$ESJ4, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d2$ESJ6_r <- dplyr::recode(d2$ESJ6, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d2$ESJ8_r <- dplyr::recode(d2$ESJ8, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d2$ESJ10_r <- dplyr::recode(d2$ESJ10, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)
d2$ESJ13_r <- dplyr::recode(d2$ESJ13, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)
d2$ESJ15_r <- dplyr::recode(d2$ESJ15, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)
d2$ESJ17_r <- dplyr::recode(d2$ESJ17, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)

## Y4: Positive personality traits (P)
d2$TIPI_P2_r <- dplyr::recode(d2$TIPI_P2 , "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d2$TIPI_P4_r <- dplyr::recode(d2$TIPI_P4, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d2$TIPI_P6_r <- dplyr::recode(d2$TIPI_P6, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d2$TIPI_P8_r <- dplyr::recode(d2$TIPI_P8, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d2$TIPI_P10_r <- dplyr::recode(d2$TIPI_P10, "5" = 1, "4" = 2, "3" = 3, "2" = 4, 
                              "1" = 5)

## Y6: Severity
d2$Sev3_r <- dplyr::recode(d2$Sev3_r , "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 
                            4, "2" = 6, "1" = 7)
d2$Sev4_r <- dplyr::recode(d2$Sev4_r, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)

### Recode all Empathy (P) items to fix error ----------------------------------
## Empathy (P) was coded in Qualtrics as 1, 2, 3, 4, 6, 8, 7: Have to recode
d2$P_empathy_1 <- dplyr::recode(d2$P_empathy_1, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_2 <- dplyr::recode(d2$P_empathy_2, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_3 <- dplyr::recode(d2$P_empathy_3, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_4 <- dplyr::recode(d2$P_empathy_4, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_5 <- dplyr::recode(d2$P_empathy_5, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_6 <- dplyr::recode(d2$P_empathy_6, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_7 <- dplyr::recode(d2$P_empathy_7, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_8 <- dplyr::recode(d2$P_empathy_8, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_9 <- dplyr::recode(d2$P_empathy_9, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_10 <- dplyr::recode(d2$P_empathy_10, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_11 <- dplyr::recode(d2$P_empathy_11, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_12 <- dplyr::recode(d2$P_empathy_12, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_13 <- dplyr::recode(d2$P_empathy_13, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_14 <- dplyr::recode(d2$P_empathy_14, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_15 <- dplyr::recode(d2$P_empathy_15, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_16 <- dplyr::recode(d2$P_empathy_16, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_17 <- dplyr::recode(d2$P_empathy_17, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_18 <- dplyr::recode(d2$P_empathy_18, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)

### Recode Like_P3 to fix error ------------------------------------------------
## Like_P3 was coded in Qualtrics as 1, 2, 3, 4, 12: Have to recode
d2$Like_P3 <- dplyr::recode(d2$Like_P3, "1" = 1, "2" = 2, "3" = 3, 
                           "4" = 4, "12" = 5)

### Create average columns -----------------------------------------------------
## ESJ -------------------------------------------------------------------------
# Add average column
d2$ESJ_av <- rowMeans(d2[,c(2,3,4,125,6,126,9,127,11,128,13,14,129,16,130,18,
                          131)], na.rm = T)

# Create data frame from selected columns
ESJ_d2 <- d2[,c(2,3,4,125,6,126,9,127,11,128,13,14,129,16,130,18,131)]

# Calculate Cronbach's alpha from new data frame
alpha(ESJ_d2)

# Alpha for ESJ = .89

## Y1 = Blame (P)---------------------------------------------------------------

# STANDARDIZE ALL VARIABLES (they're on different scales)

# First, create dataframe from raw varialbes
BlameP_d2 <- d2[,c(27,28,29,30,31,36,37)]

# Use scale to standardize that dataframe
BlameP_d2_z <- scale(BlameP_d2)

# Find average of standardized variables and add column to original df
d2$BlameP_z_av <- rowMeans(BlameP_d2_z[,c(1,2,3,4,5,6,7)], na.rm = T)

# Calculate Cronbach's alpha from raw dataframe
alpha(BlameP_d2)

# Alpha for Blame (P) = .88

## Y2 = Stigma (P) -------------------------------------------------------------
# Add average column
d2$StigmaP_av <- rowMeans(d2[,c(38,39,40,41,42)], na.rm = T)

# Create data frame from selected columns
StigmaP_d2 <- d2[,c(38,39,40,41,42)]

# Calculate Cronbach's alpha from new data frame
alpha(StigmaP_d2)

# Alpha for Stigma (P) = .97

## Y3 = Likability (P) ---------------------------------------------------------
# Add average column
d2$LikabilityP_av <- rowMeans(d2[,c(53,54,55,56,57)], na.rm = T)

# Create data frame from selected columns
LikabilityP_d2 <- d2[,c(53,54,55,56,57)]

# Calculate Cronbach's alpha from new data frame
alpha(LikabilityP_d2)

# Alpha for Likability (P) = .87

## Y4 = Positive personality traits---------------------------------------------
# Add average column
d2$PersonalityP_av <- rowMeans(d2[,c(43,132,45,133,47,134,49,135,51,136)], 
                              na.rm = T)

# Create data frame from selected columns
PersonalityP_d2 <- d2[,c(43,132,45,133,47,134,49,135,51,136)]

# Calculate Cronbach's alpha from new data frame
alpha(PersonalityP_d2)

# Alpha for Personality (P) = .76

## Y5 = Empathic concern (P) ---------------------------------------------------
# Add average column
d2$EmpathyP_av <- rowMeans(d2[,c(58,59,62,67,72,74)], na.rm = T)

# Create data frame from selected columns
EmpathyP_d2 <- d2[,c(58,59,62,67,72,74)]

# Calculate Cronbach's alpha from new data frame
alpha(EmpathyP_d2)

# Alpha for Empathy (P) = .95

## Y6 = Severity (P) -----------------------------------------------------------
# Add average column
d2$SeverityP_av <- rowMeans(d2[,c(20,21,23,24,25)], na.rm = T)

# Create data frame from selected columns
SeverityP_d2 <- d2[,c(20,21,23,24,25)]

# Calculate Cronbach's alpha from new data frame
alpha(SeverityP_d2)

# Alpha for Severity (P) = .92

### Histograms and boxplots ----------------------------------------------------
## ESJ - Looks good
hist(d2$ESJ_av)
boxplot(d2$ESJ_av)

## Blame (P) - Looks good
hist(d2$BlameP_z_av)
boxplot(d2$BlameP_z_av)

## Stigma (P) - Looks good
hist(d2$StigmaP_av)
boxplot(d2$StigmaP_av)

## Likability (P) - Looks good
hist(d2$LikabilityP_av)
boxplot(d2$LikabilityP_av)

## Personality (P) - Two outliers low and one high (values = 1.8, 1.9, and 5.0)
hist(d2$PersonalityP_av)
boxplot(d2$PersonalityP_av)
boxplot.stats(d2$PersonalityP_av)$out

# Find value for 3 SDs above the mean (value = 4.92)
mean(d2$PersonalityP_av) + (3*sd(d2$PersonalityP_av))

# Find value for 3 SDs below the mean (value = 1.70)
mean(d2$PersonalityP_av) - (3*sd(d2$PersonalityP_av))

# High outlier is above 4.92, so it should be changed
d2$PersonalityP_av[which(d2$ResponseId == "202")] <- 4.92

## Empathy (P) - Looks good
hist(d2$EmpathyP_av)
boxplot(d2$EmpathyP_av)

### Mean Center ESJ ------------------------------------------------------------
d2$ESJ_av_c <- d2$ESJ_av - mean(d2$ESJ_av)

### Set up Helmert contrasts ---------------------------------------------------
## Reverse-code Atonement
d2$Atonement_f_r <- dplyr::recode(d2$Atonement_fact, "2" = 0, "1" = 1, "0" = 2)

## Change reverse-coded Atonement to factor variable
d2$Atonement_fact_r <- as.factor(d2$Atonement_f_r)

## Establish contrasts
my.contrasts <- list(Atonement_fact_r = contr.helmert)

### Split dataset by status condition ------------------------------------------
d2_lo <- d2[which(d$SES == "0"),]
d2_hi <- d2[which(d$SES == "1"),]

### MAIN ANALYSES - REGRESSION -------------------------------------------------
## RQ1A ------------------------------------------------------------------------
# Y1: Blame
RQ1A_Y1_2 <- lm(data = d2_hi, BlameP_z_av ~ ESJ_av_c*Atonement_fact_r, contrasts = 
                my.contrasts)
summary(RQ1A_Y1_2)
eta_squared(car::Anova(RQ1A_Y1_2, type = 3))

#Y2: Stigma
RQ1A_Y2_2 <- lm(data = d2_hi, StigmaP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y2_2)
eta_squared(car::Anova(RQ1A_Y2_2, type = 3))

#Y3: Likability
RQ1A_Y3_2 <- lm(data = d2_hi, LikabilityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y3_2)
eta_squared(car::Anova(RQ1A_Y3_2, type = 3))

#Y4: Personality
RQ1A_Y4_2 <- lm(data = d2_hi, PersonalityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y4_2)
eta_squared(car::Anova(RQ1A_Y4_2, type = 3))

#Y5: Empathy
RQ1A_Y5_2 <- lm(data = d2_hi, EmpathyP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y5_2)
eta_squared(car::Anova(RQ1A_Y5_2, type = 3))

## RQ1B ------------------------------------------------------------------------
# Y1: Blame
RQ1B_Y1_2 <- lm(data = d2_lo, BlameP_z_av ~ ESJ_av_c*Atonement_fact_r, contrasts = 
                my.contrasts)
summary(RQ1B_Y1_2)
eta_squared(car::Anova(RQ1B_Y1_2, type = 3))

#Y2: Stigma
RQ1B_Y2_2 <- lm(data = d2_lo, StigmaP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y2_2)
eta_squared(car::Anova(RQ1B_Y2_2, type = 3))

#Y3: Likability
RQ1B_Y3_2 <- lm(data = d2_lo, LikabilityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y3_2)
eta_squared(car::Anova(RQ1B_Y3_2, type = 3))
plot_model(RQ1B_Y3_2, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c"))

#Y4: Personality
RQ1B_Y4_2 <- lm(data = d2_lo, PersonalityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y4_2)
eta_squared(car::Anova(RQ1B_Y4_2, type = 3))
plot_model(RQ1B_Y4_2, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c"))

#Y5: Empathy
RQ1B_Y5_2 <- lm(data = d2_lo, EmpathyP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y5_2)
eta_squared(car::Anova(RQ1B_Y5_2, type = 3))

## Exploratory 3-way interaction -----------------------------------------------
# Y1: Blame
RQExp_Y1_2 <- lm(data = d2, BlameP_z_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts = 
                  my.contrasts)
summary(RQExp_Y1_2)
eta_squared(car::Anova(RQExp_Y1_2, type = 3))

#Y2: Stigma
RQExp_Y2_2 <- lm(data = d2, StigmaP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                  my.contrasts)
summary(RQExp_Y2_2)
eta_squared(car::Anova(RQExp_Y2_2, type = 3))
plot_model(RQExp_Y2_2, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c"))
plot_model(RQExp_Y2_2, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c","SES"))

#Y3: Likability
RQExp_Y3_2 <- lm(data = d2, LikabilityP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                  my.contrasts)
summary(RQExp_Y3_2)
eta_squared(car::Anova(RQExp_Y3_2, type = 3))

#Y4: Personality
RQExp_Y4_2 <- lm(data = d2, PersonalityP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                  my.contrasts)
summary(RQExp_Y4_2)
eta_squared(car::Anova(RQExp_Y4_2, type = 3))

#Y5: Empathy
RQExp_Y5_2 <- lm(data = d2, EmpathyP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                  my.contrasts)
summary(RQExp_Y5_2)
eta_squared(car::Anova(RQExp_Y5_2, type = 3))
plot_model(RQExp_Y5_2, type = "pred", terms = c("Atonement_fact_r", "SES"))



################################ SONA SAMPLE ###################################

### Set WD, then load in dataset and load packages -----------------------------
d3 <- read.csv("PSS_SONA_CLEAN.csv")

### Check it out ---------------------------------------------------------------
View(d3)
describe(d3)

### Convert Atonement to factor variable ---------------------------------------
d3$Atonement_fact <- as.factor(d3$Atonement)
levels(d3$Atonement_fact)

### Reverse-code needed items --------------------------------------------------
## ESJ
d3$ESJ4_r <- dplyr::recode(d3$ESJ4, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)
d3$ESJ6_r <- dplyr::recode(d3$ESJ6, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)
d3$ESJ8_r <- dplyr::recode(d3$ESJ8, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)
d3$ESJ10_r <- dplyr::recode(d3$ESJ10, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                            "2" = 6, "1" = 7)
d3$ESJ13_r <- dplyr::recode(d3$ESJ13, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                            "2" = 6, "1" = 7)
d3$ESJ15_r <- dplyr::recode(d3$ESJ15, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                            "2" = 6, "1" = 7)
d3$ESJ17_r <- dplyr::recode(d3$ESJ17, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                            "2" = 6, "1" = 7)

## Y4: Positive personality traits (P)
d3$TIPI_P2_r <- dplyr::recode(d3$TIPI_P2 , "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                              = 5)
d3$TIPI_P4_r <- dplyr::recode(d3$TIPI_P4, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                              = 5)
d3$TIPI_P6_r <- dplyr::recode(d3$TIPI_P6, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                              = 5)
d3$TIPI_P8_r <- dplyr::recode(d3$TIPI_P8, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                              = 5)
d3$TIPI_P10_r <- dplyr::recode(d3$TIPI_P10, "5" = 1, "4" = 2, "3" = 3, "2" = 4, 
                               "1" = 5)

## Y6: Severity
d3$Sev3_r <- dplyr::recode(d3$Sev3_r , "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 
                             4, "2" = 6, "1" = 7)
d3$Sev4_r <- dplyr::recode(d3$Sev4_r, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)

### Recode all Empathy (P) items to fix error ----------------------------------
## Empathy (P) was coded in Qualtrics as 1, 2, 3, 4, 6, 8, 7: Have to recode
d3$P_empathy_1 <- dplyr::recode(d3$P_empathy_1, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_2 <- dplyr::recode(d3$P_empathy_2, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_3 <- dplyr::recode(d3$P_empathy_3, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d2$P_empathy_4 <- dplyr::recode(d3$P_empathy_4, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_5 <- dplyr::recode(d3$P_empathy_5, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_6 <- dplyr::recode(d3$P_empathy_6, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_7 <- dplyr::recode(d3$P_empathy_7, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_8 <- dplyr::recode(d3$P_empathy_8, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_9 <- dplyr::recode(d3$P_empathy_9, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_10 <- dplyr::recode(d3$P_empathy_10, "1" = 1, "2" = 2, "3" = 3, 
                                 "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_11 <- dplyr::recode(d3$P_empathy_11, "1" = 1, "2" = 2, "3" = 3, 
                                 "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_12 <- dplyr::recode(d3$P_empathy_12, "1" = 1, "2" = 2, "3" = 3, 
                                 "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_13 <- dplyr::recode(d3$P_empathy_13, "1" = 1, "2" = 2, "3" = 3, 
                                 "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_14 <- dplyr::recode(d3$P_empathy_14, "1" = 1, "2" = 2, "3" = 3, 
                                 "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_15 <- dplyr::recode(d3$P_empathy_15, "1" = 1, "2" = 2, "3" = 3, 
                                 "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_16 <- dplyr::recode(d3$P_empathy_16, "1" = 1, "2" = 2, "3" = 3, 
                                 "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_17 <- dplyr::recode(d3$P_empathy_17, "1" = 1, "2" = 2, "3" = 3, 
                                 "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d3$P_empathy_18 <- dplyr::recode(d3$P_empathy_18, "1" = 1, "2" = 2, "3" = 3, 
                                 "4" = 4, "6" = 5, "8" = 6, "7" = 7)

### Recode Like_P3 to fix error ------------------------------------------------
## Like_P3 was coded in Qualtrics as 1, 2, 3, 4, 12: Have to recode
d3$Like_P3 <- dplyr::recode(d3$Like_P3, "1" = 1, "2" = 2, "3" = 3, 
                            "4" = 4, "12" = 5)

### Create average columns -----------------------------------------------------
## ESJ -------------------------------------------------------------------------
# Add average column
d3$ESJ_av <- rowMeans(d3[,c(2,3,4,125,6,126,9,127,11,128,13,14,129,16,130,18,
                            131)], na.rm = T)

# Create data frame from selected columns
ESJ_d3 <- d3[,c(2,3,4,125,6,126,9,127,11,128,13,14,129,16,130,18,131)]

# Calculate Cronbach's alpha from new data frame
alpha(ESJ_d3)

# Alpha for ESJ = .83

## Y1 = Blame (P)---------------------------------------------------------------

# STANDARDIZE ALL VARIABLES (they're on different scales)

# First, create dataframe from raw varialbes
BlameP_d3 <- d3[,c(27,28,29,30,31,36,37)]

# Use scale to standardize that dataframe
BlameP_d3_z <- scale(BlameP_d3)

# Find average of standardized variables and add column to original df
d3$BlameP_z_av <- rowMeans(BlameP_d3_z[,c(1,2,3,4,5,6,7)], na.rm = T)

# Calculate Cronbach's alpha from raw dataframe
alpha(BlameP_d3)

# Alpha for Blame (P) = .88

## Y2 = Stigma (P) -------------------------------------------------------------
# Add average column
d3$StigmaP_av <- rowMeans(d3[,c(38,39,40,41,42)], na.rm = T)

# Create data frame from selected columns
StigmaP_d3 <- d3[,c(38,39,40,41,42)]

# Calculate Cronbach's alpha from new data frame
alpha(StigmaP_d3)

# Alpha for Stigma (P) = .93

## Y3 = Likability (P) ---------------------------------------------------------
# Add average column
d3$LikabilityP_av <- rowMeans(d3[,c(53,54,55,56,57)], na.rm = T)

# Create data frame from selected columns
LikabilityP_d3 <- d3[,c(53,54,55,56,57)]

# Calculate Cronbach's alpha from new data frame
alpha(LikabilityP_d3)

# Alpha for Likability (P) = .82

## Y4 = Positive personality traits---------------------------------------------
# Add average column
d3$PersonalityP_av <- rowMeans(d3[,c(43,132,45,133,47,134,49,135,51,136)], 
                               na.rm = T)

# Create data frame from selected columns
PersonalityP_d3 <- d3[,c(43,132,45,133,47,134,49,135,51,136)]

# Calculate Cronbach's alpha from new data frame
alpha(PersonalityP_d3)

# Alpha for Personality (P) = .70

## Y5 = Empathic concern (P) ---------------------------------------------------
# Add average column
d3$EmpathyP_av <- rowMeans(d3[,c(58,59,62,67,72,74)], na.rm = T)

# Create data frame from selected columns
EmpathyP_d3 <- d3[,c(58,59,62,67,72,74)]

# Calculate Cronbach's alpha from new data frame
alpha(EmpathyP_d3)

# Alpha for Empathy (P) = .90

## Y6 = Severity (P) -----------------------------------------------------------
# Add average column
d3$SeverityP_av <- rowMeans(d3[,c(20,21,23,24,25)], na.rm = T)

# Create data frame from selected columns
SeverityP_d3 <- d3[,c(20,21,23,24,25)]

# Calculate Cronbach's alpha from new data frame
alpha(SeverityP_d3)

# Alpha for Severity (P) = .88

### Histograms and boxplots ----------------------------------------------------
## ESJ - Looks good
hist(d3$ESJ_av)
boxplot(d3$ESJ_av)

## Blame (P) - Two low outliers (values = -2.65, -2.43)
hist(d3$BlameP_z_av)
boxplot(d3$BlameP_z_av)
boxplot.stats(d3$BlameP_z_av)$out

# Find value for 3 SDs below the mean (value = -2.37)
mean(d3$BlameP_z_av) - (3*sd(d3$BlameP_z_av))

# Both greater than 3 SDs below the mean, so change values
d3$BlameP_z_av[which(d3$ResponseId == "2")] <- -2.37
d3$BlameP_z_av[which(d3$ResponseId == "45")] <- -2.37

## Stigma (P) - Looks good
hist(d3$StigmaP_av)
boxplot(d3$StigmaP_av)

## Likability (P) - Looks good
hist(d3$LikabilityP_av)
boxplot(d3$LikabilityP_av)

## Personality (P) - Three outliers low and six high (values = 1.3, 1.7, 4.2, 4.4, 
## and 4.5)
hist(d3$PersonalityP_av)
boxplot(d3$PersonalityP_av)
boxplot.stats(d3$PersonalityP_av)$out

# Find value for 3 SDs above the mean (value = 4.52)
mean(d3$PersonalityP_av) + (3*sd(d3$PersonalityP_av))

# Find value for 3 SDs below the mean (value = 1.48)
mean(d3$PersonalityP_av) - (3*sd(d3$PersonalityP_av))

# One low outlier is greater than 3 SDs below the mean, so should be changed
d3$PersonalityP_av[which(d3$ResponseId == "4")] <- 1.48

## Empathy (P) - Four high outliers (Values = 5.66, 5.83, and 6.00)
hist(d3$EmpathyP_av)
boxplot(d3$EmpathyP_av)
boxplot.stats(d3$EmpathyP_av)$out

# Find value for 3 SDs above the mean (value = 5.74)
mean(d3$EmpathyP_av) + (3*sd(d3$EmpathyP_av))

# Two high outliers are greater than 3 SDs above the mean, so should be changed
d3$EmpathyP_av[which(d3$ResponseId == "2")] <- 5.74
d3$EmpathyP_av[which(d3$ResponseId == "270")] <- 5.74

### Mean Center ESJ ------------------------------------------------------------
d3$ESJ_av_c <- d3$ESJ_av - mean(d3$ESJ_av)

### Set up Helmert contrasts ---------------------------------------------------
## Reverse-code Atonement
d3$Atonement_f_r <- dplyr::recode(d3$Atonement_fact, "2" = 0, "1" = 1, "0" = 2)

## Change reverse-coded Atonement to factor variable
d3$Atonement_fact_r <- as.factor(d3$Atonement_f_r)

## Establish contrasts
my.contrasts <- list(Atonement_fact_r = contr.helmert)

### Split dataset by status condition ------------------------------------------
d3_lo <- d3[which(d$SES == "0"),]
d3_hi <- d3[which(d$SES == "1"),]

### MAIN ANALYSES - REGRESSION -------------------------------------------------
## RQ1A ------------------------------------------------------------------------
# Y1: Blame
RQ1A_Y1_3 <- lm(data = d3_hi, BlameP_z_av ~ ESJ_av_c*Atonement_fact_r, contrasts = 
                  my.contrasts)
summary(RQ1A_Y1_3)
eta_squared(car::Anova(RQ1A_Y1_3, type = 3))

#Y2: Stigma
RQ1A_Y2_3 <- lm(data = d3_hi, StigmaP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                  my.contrasts)
summary(RQ1A_Y2_3)
eta_squared(car::Anova(RQ1A_Y2_3, type = 3))
plot_model(RQ1A_Y2_3, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c"))

#Y3: Likability
RQ1A_Y3_3 <- lm(data = d3_hi, LikabilityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                  my.contrasts)
summary(RQ1A_Y3_3)
eta_squared(car::Anova(RQ1A_Y3_3, type = 3))

#Y4: Personality
RQ1A_Y4_3 <- lm(data = d3_hi, PersonalityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                  my.contrasts)
summary(RQ1A_Y4_3)
eta_squared(car::Anova(RQ1A_Y4_3, type = 3))

#Y5: Empathy
RQ1A_Y5_3 <- lm(data = d3_hi, EmpathyP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                  my.contrasts)
summary(RQ1A_Y5_3)
eta_squared(car::Anova(RQ1A_Y5_3, type = 3))

## RQ1B ------------------------------------------------------------------------
# Y1: Blame
RQ1B_Y1_3 <- lm(data = d3_lo, BlameP_z_av ~ ESJ_av_c*Atonement_fact_r, contrasts = 
                  my.contrasts)
summary(RQ1B_Y1_3)
eta_squared(car::Anova(RQ1B_Y1_3, type = 3))

#Y2: Stigma
RQ1B_Y2_3 <- lm(data = d3_lo, StigmaP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                  my.contrasts)
summary(RQ1B_Y2_3)
eta_squared(car::Anova(RQ1B_Y2_3, type = 3))

#Y3: Likability
RQ1B_Y3_3 <- lm(data = d3_lo, LikabilityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                  my.contrasts)
summary(RQ1B_Y3_3)
eta_squared(car::Anova(RQ1B_Y3_3, type = 3))

#Y4: Personality
RQ1B_Y4_3 <- lm(data = d3_lo, PersonalityP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                  my.contrasts)
summary(RQ1B_Y4_3)
eta_squared(car::Anova(RQ1B_Y4_23, type = 3))
plot_model(RQ1B_Y4_3, type = "pred", terms = c("Atonement_fact_r", "ESJ_av_c"))

#Y5: Empathy
RQ1B_Y5_3 <- lm(data = d3_lo, EmpathyP_av ~ ESJ_av_c*Atonement_fact_r, contrasts =
                  my.contrasts)
summary(RQ1B_Y5_3)
eta_squared(car::Anova(RQ1B_Y5_3, type = 3))

## Exploratory 3-way interaction -----------------------------------------------
# Y1: Blame
RQExp_Y1_3 <- lm(data = d3, BlameP_z_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts = 
                   my.contrasts)
summary(RQExp_Y1_3)
eta_squared(car::Anova(RQExp_Y1_3, type = 3))

#Y2: Stigma
RQExp_Y2_3 <- lm(data = d3, StigmaP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                   my.contrasts)
summary(RQExp_Y2_3)
eta_squared(car::Anova(RQExp_Y2_3, type = 3))

#Y3: Likability
RQExp_Y3_3 <- lm(data = d3, LikabilityP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                   my.contrasts)
summary(RQExp_Y3_3)
eta_squared(car::Anova(RQExp_Y3_3, type = 3))

#Y4: Personality
RQExp_Y4_3 <- lm(data = d3, PersonalityP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                   my.contrasts)
summary(RQExp_Y4_3)
eta_squared(car::Anova(RQExp_Y4_3, type = 3))

#Y5: Empathy
RQExp_Y5_3 <- lm(data = d3, EmpathyP_av ~ ESJ_av_c*Atonement_fact_r*SES, contrasts =
                   my.contrasts)
summary(RQExp_Y5_3)
eta_squared(car::Anova(RQExp_Y5_3, type = 3))



############################### MEGA-ANALYSIS ##################################

### Export edited dataframes from R --------------------------------------------
write.csv(d, "/Users/Kira/Desktop/PSS/PSSAnalyses\\Prolific1_REdit.csv", 
          row.names = FALSE)
write.csv(d2, "/Users/Kira/Desktop/PSS/PSSAnalyses\\Prolific2_REdit.csv", 
          row.names = FALSE)
write.csv(d3, "/Users/Kira/Desktop/PSS/PSSAnalyses\\SONA_REdit.csv", 
          row.names = FALSE)

### In Excel: Combine datasets. Create a new variable called "Sample" and code
### Prolific 1 as 0, Prolific 2 as 1, and SONA as 2. Edit "ResponseID" for
### Prolific 2 and SONA samples, so that the response IDs continue numerically
### from the Prolific 1 response IDs. Then save that .csv file as 
### "PSS_Pooled_CLEAN_REdit.csv."

d4 <- read.csv("PSS_Pooled_CLEAN_REdit.csv")

### Check it out ---------------------------------------------------------------
View(d4)
describe(d4)

### Dummy code Sample variable -------------------------------------------------
## Prolific 1 (S1 = 1, S2 = 0, S3 = 0)
d4$Pro1 <- recode(d4$Sample, "0" = 1, "1" = 0, "2" = 0)

## Prolific 2 (S1 = 0, S2 = 1, S3 = 0)
d4$Pro2 <- recode(d4$Sample, "0" = 0, "1" = 1, "2" = 0)

## SONA (S1 = 0, S2 = 0, S3 = 1)
d4$SONA <- recode(d4$Sample, "0" = 0, "1" = 0, "2" = 1)

### Split D4 by Status ---------------------------------------------------------
d4_lo <- d4[which(d4$SES == "0"),]
d4_hi <- d4[which(d4$SES == "1"),]

### RQ1A -----------------------------------------------------------------------
## Y1: Blame
# Regression table
# Step 0: Intercept
RQ1A_Y1_step0 <- lm(BlameP_z_av ~ 1, data = d4_hi)
summary(RQ1A_Y1_step0)

# Step 1: Control variables
RQ1A_Y1_step1 <- lm(BlameP_z_av ~ Pro1 + Pro2 + SONA, data = d4_hi)
summary(RQ1A_Y1_step1)

anova(RQ1A_Y1_step0, RQ1A_Y1_step1)
RQ1A_Y1_rs1 <- summary(RQ1A_Y1_step0)$r.squared
RQ1A_Y1_rs2 <- summary(RQ1A_Y1_step1)$r.squared
RQ1A_Y1_rs.change1 <- RQ1A_Y1_rs1-RQ1A_Y1_rs2 # provides R-sqd-change
RQ1A_Y1_rs.change1

# Step 2: IVs of interest

RQ1A_Y1_step2 <- lm(BlameP_z_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + 
                       Atonement_fact, data = d4_hi)
summary(RQ1A_Y1_step2)

anova(RQ1A_Y1_step1, RQ1A_Y1_step2)
RQ1A_Y1_rs3 <- summary(RQ1A_Y1_step1)$r.squared
RQ1A_Y1_rs4 <- summary(RQ1A_Y1_step2)$r.squared
RQ1A_Y1_rs.change2 <-RQ1A_Y1_rs3-RQ1A_Y1_rs4 # provides R-sqd-change
RQ1A_Y1_rs.change2

# Step 3: Interactions

RQ1A_Y1_step3 <- lm(BlameP_z_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*Atonement_fact, 
                     data = d4_hi)
summary(RQ1A_Y1_step3)

anova(RQ1A_Y1_step2, RQ1A_Y1_step3)
RQ1A_Y1_rs5 <- summary(RQ1A_Y1_step2)$r.squared
RQ1A_Y1_rs6 <- summary(RQ1A_Y1_step3)$r.squared
RQ1A_Y1_rs.change3 <- RQ1A_Y1_rs5-RQ1A_Y1_rs6 # provides R-sqd-change
RQ1A_Y1_rs.change3

## Y2: Stigma
# Regression table
# Step 0: Intercept
RQ1A_Y2_step0 <- lm(StigmaP_av ~ 1, data = d4_hi)
summary(RQ1A_Y2_step0)

# Step 1: Control variables
RQ1A_Y2_step1 <- lm(StigmaP_av ~ Pro1 + Pro2 + SONA, data = d4_hi)
summary(RQ1A_Y2_step1)

anova(RQ1A_Y2_step0, RQ1A_Y2_step1)
RQ1A_Y2_rs1 <- summary(RQ1A_Y2_step0)$r.squared
RQ1A_Y2_rs2 <- summary(RQ1A_Y2_step1)$r.squared
RQ1A_Y2_rs.change1 <- RQ1A_Y2_rs1-RQ1A_Y2_rs2 # provides R-sqd-change
RQ1A_Y2_rs.change1

# Step 2: IVs of interest

RQ1A_Y2_step2 <- lm(StigmaP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + 
                       Atonement_fact, data = d4_hi)
summary(RQ1A_Y2_step2)

anova(RQ1A_Y2_step1, RQ1A_Y2_step2)
RQ1A_Y2_rs3 <- summary(RQ1A_Y2_step1)$r.squared
RQ1A_Y2_rs4 <- summary(RQ1A_Y2_step2)$r.squared
RQ1A_Y2_rs.change2 <-RQ1A_Y2_rs3-RQ1A_Y2_rs4 # provides R-sqd-change
RQ1A_Y2_rs.change2

# Step 3: Interactions

RQ1A_Y2_step3 <- lm(StigmaP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*Atonement_fact, 
                     data = d4_hi)
summary(RQ1A_Y2_step3)

anova(RQ1A_Y2_step2, RQ1A_Y2_step3)
RQ1A_Y2_rs5 <- summary(RQ1A_Y2_step2)$r.squared
RQ1A_Y2_rs6 <- summary(RQ1A_Y2_step3)$r.squared
RQ1A_Y2_rs.change3 <- RQ1A_Y2_rs5-RQ1A_Y2_rs6 # provides R-sqd-change
RQ1A_Y2_rs.change3

## Y3: Likability
# Regression table
# Step 0: Intercept
RQ1A_Y3_step0 <- lm(LikabilityP_av ~ 1, data = d4_hi)
summary(RQ1A_Y3_step0)

# Step 1: Control variables
RQ1A_Y3_step1 <- lm(LikabilityP_av ~ Pro1 + Pro2 + SONA, data = d4_hi)
summary(RQ1A_Y3_step1)

anova(RQ1A_Y3_step0, RQ1A_Y3_step1)
RQ1A_Y3_rs1 <- summary(RQ1A_Y3_step0)$r.squared
RQ1A_Y3_rs2 <- summary(RQ1A_Y3_step1)$r.squared
RQ1A_Y3_rs.change1 <- RQ1A_Y3_rs1-RQ1A_Y3_rs2 # provides R-sqd-change
RQ1A_Y3_rs.change1

# Step 2: IVs of interest

RQ1A_Y3_step2 <- lm(LikabilityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + 
                       Atonement_fact, data = d4_hi)
summary(RQ1A_Y3_step2)

anova(RQ1A_Y3_step1, RQ1A_Y3_step2)
RQ1A_Y3_rs3 <- summary(RQ1A_Y3_step1)$r.squared
RQ1A_Y3_rs4 <- summary(RQ1A_Y3_step2)$r.squared
RQ1A_Y3_rs.change2 <-RQ1A_Y3_rs3-RQ1A_Y3_rs4 # provides R-sqd-change
RQ1A_Y3_rs.change2

# Step 3: Interactions

RQ1A_Y3_step3 <- lm(LikabilityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*
                       Atonement_fact, data = d4_hi)
summary(RQ1A_Y3_step3)

anova(RQ1A_Y3_step2, RQ1A_Y3_step3)
RQ1A_Y3_rs5 <- summary(RQ1A_Y3_step2)$r.squared
RQ1A_Y3_rs6 <- summary(RQ1A_Y3_step3)$r.squared
RQ1A_Y3_rs.change3 <- RQ1A_Y3_rs5-RQ1A_Y3_rs6 # provides R-sqd-change
RQ1A_Y3_rs.change3

## Y4: Personality
# Regression table
# Step 0: Intercept
RQ1A_Y4_step0 <- lm(PersonalityP_av ~ 1, data = d4_hi)
summary(RQ1A_Y4_step0)

# Step 1: Control variables
RQ1A_Y4_step1 <- lm(PersonalityP_av ~ Pro1 + Pro2 + SONA, data = d4_hi)
summary(RQ1A_Y4_step1)

anova(RQ1A_Y4_step0, RQ1A_Y4_step1)
RQ1A_Y4_rs1 <- summary(RQ1A_Y4_step0)$r.squared
RQ1A_Y4_rs2 <- summary(RQ1A_Y4_step1)$r.squared
RQ1A_Y4_rs.change1 <- RQ1A_Y4_rs1-RQ1A_Y4_rs2 # provides R-sqd-change
RQ1A_Y4_rs.change1

# Step 2: IVs of interest

RQ1A_Y4_step2 <- lm(PersonalityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + 
                       Atonement_fact, data = d4_hi)
summary(RQ1A_Y4_step2)

anova(RQ1A_Y4_step1, RQ1A_Y4_step2)
RQ1A_Y4_rs3 <- summary(RQ1A_Y4_step1)$r.squared
RQ1A_Y4_rs4 <- summary(RQ1A_Y4_step2)$r.squared
RQ1A_Y4_rs.change2 <-RQ1A_Y4_rs3-RQ1A_Y4_rs4 # provides R-sqd-change
RQ1A_Y4_rs.change2

# Step 3: Interactions

RQ1A_Y4_step3 <- lm(PersonalityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*
                       Atonement_fact, data = d4_hi)
summary(RQ1A_Y4_step3)

anova(RQ1A_Y4_step2, RQ1A_Y4_step3)
RQ1A_Y4_rs5 <- summary(RQ1A_Y4_step2)$r.squared
RQ1A_Y4_rs6 <- summary(RQ1A_Y4_step3)$r.squared
RQ1A_Y4_rs.change3 <- RQ1A_Y4_rs5-RQ1A_Y4_rs6 # provides R-sqd-change
RQ1A_Y4_rs.change3

## Y5: Empathy
# Regression table
# Step 0: Intercept
RQ1A_Y5_step0 <- lm(EmpathyP_av ~ 1, data = d4_hi)
summary(RQ1A_Y5_step0)

# Step 1: Control variables
RQ1A_Y5_step1 <- lm(EmpathyP_av ~ Pro1 + Pro2 + SONA, data = d4_hi)
summary(RQ1A_Y5_step1)

anova(RQ1A_Y5_step0, RQ1A_Y5_step1)
RQ1A_Y5_rs1 <- summary(RQ1A_Y5_step0)$r.squared
RQ1A_Y5_rs2 <- summary(RQ1A_Y5_step1)$r.squared
RQ1A_Y5_rs.change1 <- RQ1A_Y5_rs1-RQ1A_Y5_rs2 # provides R-sqd-change
RQ1A_Y5_rs.change1

# Step 2: IVs of interest

RQ1A_Y5_step2 <- lm(EmpathyP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + 
                       Atonement_fact, data = d4_hi)
summary(RQ1A_Y5_step2)

anova(RQ1A_Y5_step1, RQ1A_Y5_step2)
RQ1A_Y5_rs3 <- summary(RQ1A_Y5_step1)$r.squared
RQ1A_Y5_rs4 <- summary(RQ1A_Y5_step2)$r.squared
RQ1A_Y5_rs.change2 <-RQ1A_Y5_rs3-RQ1A_Y5_rs4 # provides R-sqd-change
RQ1A_Y5_rs.change2

# Step 3: Interactions

RQ1A_Y5_step3 <- lm(EmpathyP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*
                       Atonement_fact, data = d4_hi)
summary(RQ1A_Y5_step3)

anova(RQ1A_Y5_step2, RQ1A_Y5_step3)
RQ1A_Y5_rs5 <- summary(RQ1A_Y5_step2)$r.squared
RQ1A_Y5_rs6 <- summary(RQ1A_Y5_step3)$r.squared
RQ1A_Y5_rs.change3 <- RQ1A_Y5_rs5-RQ1A_Y5_rs6 # provides R-sqd-change
RQ1A_Y5_rs.change3

### RQ1B -----------------------------------------------------------------------
## Y1: Blame
# Regression table
# Step 0: Intercept
RQ1B_Y1_step0 <- lm(BlameP_z_av ~ 1, data = d4_lo)
summary(RQ1B_Y1_step0)

# Step 1: Control variables
RQ1B_Y1_step1 <- lm(BlameP_z_av ~ Pro1 + Pro2 + SONA, data = d4_lo)
summary(RQ1B_Y1_step1)

anova(RQ1B_Y1_step0, RQ1B_Y1_step1)
RQ1B_Y1_rs1 <- summary(RQ1B_Y1_step0)$r.squared
RQ1B_Y1_rs2 <- summary(RQ1B_Y1_step1)$r.squared
RQ1B_Y1_rs.change1 <- RQ1B_Y1_rs1-RQ1B_Y1_rs2 # provides R-sqd-change
RQ1B_Y1_rs.change1

# Step 2: IVs of interest

RQ1B_Y1_step2 <- lm(BlameP_z_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + 
                      Atonement_fact, data = d4_lo)
summary(RQ1B_Y1_step2)

anova(RQ1B_Y1_step1, RQ1B_Y1_step2)
RQ1B_Y1_rs3 <- summary(RQ1B_Y1_step1)$r.squared
RQ1B_Y1_rs4 <- summary(RQ1B_Y1_step2)$r.squared
RQ1B_Y1_rs.change2 <-RQ1B_Y1_rs3-RQ1B_Y1_rs4 # provides R-sqd-change
RQ1B_Y1_rs.change2

# Step 3: Interactions

RQ1B_Y1_step3 <- lm(BlameP_z_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*Atonement_fact, 
                    data = d4_lo)
summary(RQ1B_Y1_step3)

anova(RQ1B_Y1_step2, RQ1B_Y1_step3)
RQ1B_Y1_rs5 <- summary(RQ1B_Y1_step2)$r.squared
RQ1B_Y1_rs6 <- summary(RQ1B_Y1_step3)$r.squared
RQ1B_Y1_rs.change3 <- RQ1B_Y1_rs5-RQ1B_Y1_rs6 # provides R-sqd-change
RQ1B_Y1_rs.change3

## Y2: Blame
# Regression table
# Step 0: Intercept
RQ1B_Y2_step0 <- lm(StigmaP_av ~ 1, data = d4_lo)
summary(RQ1B_Y2_step0)

# Step 1: Control variables
RQ1B_Y2_step1 <- lm(StigmaP_av ~ Pro1 + Pro2 + SONA, data = d4_lo)
summary(RQ1B_Y2_step1)

anova(RQ1B_Y2_step0, RQ1B_Y2_step1)
RQ1B_Y2_rs1 <- summary(RQ1B_Y2_step0)$r.squared
RQ1B_Y2_rs2 <- summary(RQ1B_Y2_step1)$r.squared
RQ1B_Y2_rs.change1 <- RQ1B_Y2_rs1-RQ1B_Y2_rs2 # provides R-sqd-change
RQ1B_Y2_rs.change1

# Step 2: IVs of interest

RQ1B_Y2_step2 <- lm(StigmaP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + 
                      Atonement_fact, data = d4_lo)
summary(RQ1B_Y2_step2)

anova(RQ1B_Y2_step1, RQ1B_Y2_step2)
RQ1B_Y2_rs3 <- summary(RQ1B_Y2_step1)$r.squared
RQ1B_Y2_rs4 <- summary(RQ1B_Y2_step2)$r.squared
RQ1B_Y2_rs.change2 <-RQ1B_Y2_rs3-RQ1B_Y2_rs4 # provides R-sqd-change
RQ1B_Y2_rs.change2

# Step 3: Interactions

RQ1B_Y2_step3 <- lm(StigmaP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*Atonement_fact, 
                    data = d4_lo)
summary(RQ1B_Y2_step3)

anova(RQ1B_Y2_step2, RQ1B_Y2_step3)
RQ1B_Y2_rs5 <- summary(RQ1B_Y2_step2)$r.squared
RQ1B_Y2_rs6 <- summary(RQ1B_Y2_step3)$r.squared
RQ1B_Y2_rs.change3 <- RQ1B_Y2_rs5-RQ1B_Y2_rs6 # provides R-sqd-change
RQ1B_Y2_rs.change3

## Y3: Likability
# Regression table
# Step 0: Intercept
RQ1B_Y3_step0 <- lm(LikabilityP_av ~ 1, data = d4_lo)
summary(RQ1B_Y3_step0)

# Step 1: Control variables
RQ1B_Y3_step1 <- lm(LikabilityP_av ~ Pro1 + Pro2 + SONA, data = d4_lo)
summary(RQ1B_Y3_step1)

anova(RQ1B_Y3_step0, RQ1B_Y3_step1)
RQ1B_Y3_rs1 <- summary(RQ1B_Y3_step0)$r.squared
RQ1B_Y3_rs2 <- summary(RQ1B_Y3_step1)$r.squared
RQ1B_Y3_rs.change1 <- RQ1B_Y3_rs1-RQ1B_Y3_rs2 # provides R-sqd-change
RQ1B_Y3_rs.change1

# Step 2: IVs of interest

RQ1B_Y3_step2 <- lm(LikabilityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + 
                      Atonement_fact, data = d4_lo)
summary(RQ1B_Y3_step2)

anova(RQ1B_Y3_step1, RQ1B_Y3_step2)
RQ1B_Y3_rs3 <- summary(RQ1B_Y3_step1)$r.squared
RQ1B_Y3_rs4 <- summary(RQ1B_Y3_step2)$r.squared
RQ1B_Y3_rs.change2 <-RQ1B_Y3_rs3-RQ1B_Y3_rs4 # provides R-sqd-change
RQ1B_Y3_rs.change2

# Step 3: Interactions

RQ1B_Y3_step3 <- lm(LikabilityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*
                      Atonement_fact, data = d4_lo)
summary(RQ1B_Y3_step3)

anova(RQ1B_Y3_step2, RQ1B_Y3_step3)
RQ1B_Y3_rs5 <- summary(RQ1B_Y3_step2)$r.squared
RQ1B_Y3_rs6 <- summary(RQ1B_Y3_step3)$r.squared
RQ1B_Y3_rs.change3 <- RQ1B_Y3_rs5-RQ1B_Y3_rs6 # provides R-sqd-change
RQ1B_Y3_rs.change3

## Y4: Personality
# Regression table
# Step 0: Intercept
RQ1B_Y4_step0 <- lm(PersonalityP_av ~ 1, data = d4_lo)
summary(RQ1B_Y4_step0)

# Step 1: Control variables
RQ1B_Y4_step1 <- lm(PersonalityP_av ~ Pro1 + Pro2 + SONA, data = d4_lo)
summary(RQ1B_Y4_step1)

anova(RQ1B_Y4_step0, RQ1B_Y4_step1)
RQ1B_Y4_rs1 <- summary(RQ1B_Y4_step0)$r.squared
RQ1B_Y4_rs2 <- summary(RQ1B_Y4_step1)$r.squared
RQ1B_Y4_rs.change1 <- RQ1B_Y4_rs1-RQ1B_Y4_rs2 # provides R-sqd-change
RQ1B_Y4_rs.change1

# Step 2: IVs of interest

RQ1B_Y4_step2 <- lm(PersonalityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + 
                      Atonement_fact, data = d4_lo)
summary(RQ1B_Y4_step2)

anova(RQ1B_Y4_step1, RQ1B_Y4_step2)
RQ1B_Y4_rs3 <- summary(RQ1B_Y4_step1)$r.squared
RQ1B_Y4_rs4 <- summary(RQ1B_Y4_step2)$r.squared
RQ1B_Y4_rs.change2 <-RQ1B_Y4_rs3-RQ1B_Y4_rs4 # provides R-sqd-change
RQ1B_Y4_rs.change2

# Step 3: Interactions

RQ1B_Y4_step3 <- lm(PersonalityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*
                      Atonement_fact, data = d4_lo)
summary(RQ1B_Y4_step3)

anova(RQ1B_Y4_step2, RQ1B_Y4_step3)
RQ1B_Y4_rs5 <- summary(RQ1B_Y4_step2)$r.squared
RQ1B_Y4_rs6 <- summary(RQ1B_Y4_step3)$r.squared
RQ1B_Y4_rs.change3 <- RQ1B_Y4_rs5-RQ1B_Y4_rs6 # provides R-sqd-change
RQ1B_Y4_rs.change3

## Y5: Empathy
# Regression table
# Step 0: Intercept
RQ1B_Y5_step0 <- lm(EmpathyP_av ~ 1, data = d4_lo)
summary(RQ1B_Y5_step0)

# Step 1: Control variables
RQ1B_Y5_step1 <- lm(EmpathyP_av ~ Pro1 + Pro2 + SONA, data = d4_lo)
summary(RQ1B_Y5_step1)

anova(RQ1B_Y5_step0, RQ1B_Y5_step1)
RQ1B_Y5_rs1 <- summary(RQ1B_Y5_step0)$r.squared
RQ1B_Y5_rs2 <- summary(RQ1B_Y5_step1)$r.squared
RQ1B_Y5_rs.change1 <- RQ1B_Y5_rs1-RQ1B_Y5_rs2 # provides R-sqd-change
RQ1B_Y5_rs.change1

# Step 2: IVs of interest

RQ1B_Y5_step2 <- lm(EmpathyP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + 
                      Atonement_fact, data = d4_lo)
summary(RQ1B_Y5_step2)

anova(RQ1B_Y5_step1, RQ1B_Y5_step2)
RQ1B_Y5_rs3 <- summary(RQ1B_Y5_step1)$r.squared
RQ1B_Y5_rs4 <- summary(RQ1B_Y5_step2)$r.squared
RQ1B_Y5_rs.change2 <-RQ1B_Y5_rs3-RQ1B_Y5_rs4 # provides R-sqd-change
RQ1B_Y5_rs.change2

# Step 3: Interactions

RQ1B_Y5_step3 <- lm(EmpathyP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*
                      Atonement_fact, data = d4_lo)
summary(RQ1B_Y5_step3)

anova(RQ1B_Y5_step2, RQ1B_Y5_step3)
RQ1B_Y5_rs5 <- summary(RQ1B_Y5_step2)$r.squared
RQ1B_Y5_rs6 <- summary(RQ1B_Y5_step3)$r.squared
RQ1B_Y5_rs.change3 <- RQ1B_Y5_rs5-RQ1B_Y5_rs6 # provides R-sqd-change
RQ1B_Y5_rs.change3

### EXPLORATORY ANALYSES -------------------------------------------------------
## Y1: Blame
# Regression table
# Step 0: Intercept
RQExp_Y1_step0 <- lm(BlameP_z_av ~ 1, data = d4)
summary(RQExp_Y1_step0)

# Step 1: Control variables
RQExp_Y1_step1 <- lm(BlameP_z_av ~ Pro1 + Pro2 + SONA, data = d4)
summary(RQExp_Y1_step1)

anova(RQExp_Y1_step0, RQExp_Y1_step1)
RQExp_Y1_rs1 <- summary(RQExp_Y1_step0)$r.squared
RQExp_Y1_rs2 <- summary(RQExp_Y1_step1)$r.squared
RQExp_Y1_rs.change1 <- RQExp_Y1_rs1-RQExp_Y1_rs2 # provides R-sqd-change
RQExp_Y1_rs.change1

# Step 2: IVs of interest

RQExp_Y1_step2 <- lm(BlameP_z_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + SES +
                       Atonement_fact, data = d4)
summary(RQExp_Y1_step2)

anova(RQExp_Y1_step1, RQExp_Y1_step2)
RQExp_Y1_rs3 <- summary(RQExp_Y1_step1)$r.squared
RQExp_Y1_rs4 <- summary(RQExp_Y1_step2)$r.squared
RQExp_Y1_rs.change2 <-RQExp_Y1_rs3-RQExp_Y1_rs4 # provides R-sqd-change
RQExp_Y1_rs.change2

# Step 3: Interactions

RQExp_Y1_step3 <- lm(BlameP_z_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*Atonement_fact
                     *SES, data = d4)
summary(RQExp_Y1_step3)

anova(RQExp_Y1_step2, RQExp_Y1_step3)
RQExp_Y1_rs5 <- summary(RQExp_Y1_step2)$r.squared
RQExp_Y1_rs6 <- summary(RQExp_Y1_step3)$r.squared
RQExp_Y1_rs.change3 <- RQExp_Y1_rs5-RQExp_Y1_rs6 # provides R-sqd-change
RQExp_Y1_rs.change3

## Y2: Blame
# Regression table
# Step 0: Intercept
RQExp_Y2_step0 <- lm(StigmaP_av ~ 1, data = d4)
summary(RQExp_Y2_step0)

# Step 1: Control variables
RQExp_Y2_step1 <- lm(StigmaP_av ~ Pro1 + Pro2 + SONA, data = d4)
summary(RQExp_Y2_step1)

anova(RQExp_Y2_step0, RQExp_Y2_step1)
RQExp_Y2_rs1 <- summary(RQExp_Y2_step0)$r.squared
RQExp_Y2_rs2 <- summary(RQExp_Y2_step1)$r.squared
RQExp_Y2_rs.change1 <- RQExp_Y2_rs1-RQExp_Y2_rs2 # provides R-sqd-change
RQExp_Y2_rs.change1

# Step 2: IVs of interest

RQExp_Y2_step2 <- lm(StigmaP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + SES +
                       Atonement_fact, data = d4)
summary(RQExp_Y2_step2)

anova(RQExp_Y2_step1, RQExp_Y2_step2)
RQExp_Y2_rs3 <- summary(RQExp_Y2_step1)$r.squared
RQExp_Y2_rs4 <- summary(RQExp_Y2_step2)$r.squared
RQExp_Y2_rs.change2 <-RQExp_Y2_rs3-RQExp_Y2_rs4 # provides R-sqd-change
RQExp_Y2_rs.change2

# Step 3: Interactions

RQExp_Y2_step3 <- lm(StigmaP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*Atonement_fact
                     *SES, data = d4)
summary(RQExp_Y2_step3)

anova(RQExp_Y2_step2, RQExp_Y2_step3)
RQExp_Y2_rs5 <- summary(RQExp_Y2_step2)$r.squared
RQExp_Y2_rs6 <- summary(RQExp_Y2_step3)$r.squared
RQExp_Y2_rs.change3 <- RQExp_Y2_rs5-RQExp_Y2_rs6 # provides R-sqd-change
RQExp_Y2_rs.change3

## Y3: Likability
# Regression table
# Step 0: Intercept
RQExp_Y3_step0 <- lm(LikabilityP_av ~ 1, data = d4)
summary(RQExp_Y3_step0)

# Step 1: Control variables
RQExp_Y3_step1 <- lm(LikabilityP_av ~ Pro1 + Pro2 + SONA, data = d4)
summary(RQExp_Y3_step1)

anova(RQExp_Y3_step0, RQExp_Y3_step1)
RQExp_Y3_rs1 <- summary(RQExp_Y3_step0)$r.squared
RQExp_Y3_rs2 <- summary(RQExp_Y3_step1)$r.squared
RQExp_Y3_rs.change1 <- RQExp_Y3_rs1-RQExp_Y3_rs2 # provides R-sqd-change
RQExp_Y3_rs.change1

# Step 2: IVs of interest

RQExp_Y3_step2 <- lm(LikabilityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + SES +
                       Atonement_fact, data = d4)
summary(RQExp_Y3_step2)

anova(RQExp_Y3_step1, RQExp_Y3_step2)
RQExp_Y3_rs3 <- summary(RQExp_Y3_step1)$r.squared
RQExp_Y3_rs4 <- summary(RQExp_Y3_step2)$r.squared
RQExp_Y3_rs.change2 <-RQExp_Y3_rs3-RQExp_Y3_rs4 # provides R-sqd-change
RQExp_Y3_rs.change2

# Step 3: Interactions

RQExp_Y3_step3 <- lm(LikabilityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*
                       Atonement_fact*SES, data = d4)
summary(RQExp_Y3_step3)

anova(RQExp_Y3_step2, RQExp_Y3_step3)
RQExp_Y3_rs5 <- summary(RQExp_Y3_step2)$r.squared
RQExp_Y3_rs6 <- summary(RQExp_Y3_step3)$r.squared
RQExp_Y3_rs.change3 <- RQExp_Y3_rs5-RQExp_Y3_rs6 # provides R-sqd-change
RQExp_Y3_rs.change3

## Y4: Personality
# Regression table
# Step 0: Intercept
RQExp_Y4_step0 <- lm(PersonalityP_av ~ 1, data = d4)
summary(RQExp_Y4_step0)

# Step 1: Control variables
RQExp_Y4_step1 <- lm(PersonalityP_av ~ Pro1 + Pro2 + SONA, data = d4)
summary(RQExp_Y4_step1)

anova(RQExp_Y4_step0, RQExp_Y4_step1)
RQExp_Y4_rs1 <- summary(RQExp_Y4_step0)$r.squared
RQExp_Y4_rs2 <- summary(RQExp_Y4_step1)$r.squared
RQExp_Y4_rs.change1 <- RQExp_Y4_rs1-RQExp_Y4_rs2 # provides R-sqd-change
RQExp_Y4_rs.change1

# Step 2: IVs of interest

RQExp_Y4_step2 <- lm(PersonalityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + SES +
                       Atonement_fact, data = d4)
summary(RQExp_Y4_step2)

anova(RQExp_Y4_step1, RQExp_Y4_step2)
RQExp_Y4_rs3 <- summary(RQExp_Y4_step1)$r.squared
RQExp_Y4_rs4 <- summary(RQExp_Y4_step2)$r.squared
RQExp_Y4_rs.change2 <-RQExp_Y4_rs3-RQExp_Y4_rs4 # provides R-sqd-change
RQExp_Y4_rs.change2

# Step 3: Interactions

RQExp_Y4_step3 <- lm(PersonalityP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*
                       Atonement_fact*SES, data = d4)
summary(RQExp_Y4_step3)

anova(RQExp_Y4_step2, RQExp_Y4_step3)
RQExp_Y4_rs5 <- summary(RQExp_Y4_step2)$r.squared
RQExp_Y4_rs6 <- summary(RQExp_Y4_step3)$r.squared
RQExp_Y4_rs.change3 <- RQExp_Y4_rs5-RQExp_Y4_rs6 # provides R-sqd-change
RQExp_Y4_rs.change3

## Y5: Empathy
# Regression table
# Step 0: Intercept
RQExp_Y5_step0 <- lm(EmpathyP_av ~ 1, data = d4)
summary(RQExp_Y5_step0)

# Step 1: Control variables
RQExp_Y5_step1 <- lm(EmpathyP_av ~ Pro1 + Pro2 + SONA, data = d4)
summary(RQExp_Y5_step1)

anova(RQExp_Y5_step0, RQExp_Y5_step1)
RQExp_Y5_rs1 <- summary(RQExp_Y5_step0)$r.squared
RQExp_Y5_rs2 <- summary(RQExp_Y5_step1)$r.squared
RQExp_Y5_rs.change1 <- RQExp_Y5_rs1-RQExp_Y5_rs2 # provides R-sqd-change
RQExp_Y5_rs.change1

# Step 2: IVs of interest

RQExp_Y5_step2 <- lm(EmpathyP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c + SES +
                       Atonement_fact, data = d4)
summary(RQExp_Y5_step2)

anova(RQExp_Y5_step1, RQExp_Y5_step2)
RQExp_Y5_rs3 <- summary(RQExp_Y5_step1)$r.squared
RQExp_Y5_rs4 <- summary(RQExp_Y5_step2)$r.squared
RQExp_Y5_rs.change2 <-RQExp_Y5_rs3-RQExp_Y5_rs4 # provides R-sqd-change
RQExp_Y5_rs.change2

# Step 3: Interactions

RQExp_Y5_step3 <- lm(EmpathyP_av ~ Pro1 + Pro2 + SONA + ESJ_av_c*
                       Atonement_fact*SES, data = d4)
summary(RQExp_Y5_step3)

anova(RQExp_Y5_step2, RQExp_Y5_step3)
RQExp_Y5_rs5 <- summary(RQExp_Y5_step2)$r.squared
RQExp_Y5_rs6 <- summary(RQExp_Y5_step3)$r.squared
RQExp_Y5_rs.change3 <- RQExp_Y5_rs5-RQExp_Y5_rs6 # provides R-sqd-change
RQExp_Y5_rs.change3


###########################################Allison's Script - Final#########################################
#look at datasets
describe(Prof1)
describe(Prof2)
describe(sona)

#add column to data sets, which will be their sample variable
#1 = Prolific 1
#2 = Prolific 2
#3 = sona
Prof1$sample <- 1
Prof2$sample <- 2
sona$sample <- 3

#combine all three data sets into one
mega <- rbind(Prof1, Prof2, sona)

#############################Scale Scoring###############################

####################economic system justification#########################
###Prolific Sample 1
#reverse score necessary items
Prof1$ESJ4_r <- 8 - Prof1$ESJ4
Prof1$ESJ6_r <- 8 - Prof1$ESJ6
Prof1$ESJ8_r <- 8 - Prof1$ESJ8
Prof1$ESJ10_r <- 8 - Prof1$ESJ10
Prof1$ESJ13_r <- 8 - Prof1$ESJ13
Prof1$ESJ15_r <- 8 - Prof1$ESJ15
Prof1$ESJ17_r <- 8 - Prof1$ESJ17
Prof1$esj <- (Prof1$ESJ1 + Prof1$ESJ2 + Prof1$ESJ3 + Prof1$ESJ4_r + 
              Prof1$ESJ5 + Prof1$ESJ6_r + Prof1$ESJ7 + 
              Prof1$ESJ8_r + Prof1$ESJ9 + Prof1$ESJ10_r + Prof1$ESJ11 + 
              Prof1$ESJ12 + Prof1$ESJ13_r + Prof1$ESJ14 + Prof1$ESJ15_r + 
              Prof1$ESJ16 + Prof1$ESJ17_r)/17

#visualize data
hist(Prof1$esj) 
boxplot(Prof1$esj) #no outliers

#cronbach's alpha
esj_a <- subset(Prof1, select = c(ESJ1, ESJ2, ESJ3, ESJ4_r, ESJ5, ESJ6_r, ESJ7, 
                                ESJ8_r, ESJ9, ESJ10_r, ESJ11, ESJ12, ESJ13_r, 
                                ESJ14, ESJ15_r, ESJ16, ESJ17_r))
psych::alpha(esj_a)

#mean center
Prof1$esj.m <- scale(Prof1$esj, center = T)
#z-score
Prof1$esj.z <- scale(Prof1$esj, center = T, scale = T)


###Prolific Sample2
#reverse score
Prof2$ESJ4_r <- 8 - Prof2$ESJ4
Prof2$ESJ6_r <- 8 - Prof2$ESJ6
Prof2$ESJ8_r <- 8 - Prof2$ESJ8
Prof2$ESJ10_r <- 8 - Prof2$ESJ10
Prof2$ESJ13_r <- 8 - Prof2$ESJ13
Prof2$ESJ15_r <- 8 - Prof2$ESJ15
Prof2$ESJ17_r <- 8 - Prof2$ESJ17
Prof2$esj <- (Prof2$ESJ1 + Prof2$ESJ2 + Prof2$ESJ3 + Prof2$ESJ4_r + 
                Prof2$ESJ5 + Prof2$ESJ6_r + Prof2$ESJ7 + 
                Prof2$ESJ8_r + Prof2$ESJ9 + Prof2$ESJ10_r + Prof2$ESJ11 + 
                Prof2$ESJ12 + Prof2$ESJ13_r + Prof2$ESJ14 + Prof2$ESJ15_r + 
                Prof2$ESJ16 + Prof2$ESJ17_r)/17

#visualize data
hist(Prof2$esj)
boxplot(Prof2$esj) #no outliers

#cronbachs alpha
esj_a2 <- subset(Prof2, select = c(ESJ1, ESJ2, ESJ3, ESJ4_r, ESJ5, ESJ6_r, ESJ7, 
                                  ESJ8_r, ESJ9, ESJ10_r, ESJ11, ESJ12, ESJ13_r, 
                                  ESJ14, ESJ15_r, ESJ16, ESJ17_r))
psych::alpha(esj_a2)

#mean center
Prof2$esj.m <- scale(Prof2$esj, center = T)
#z-score
Prof2$esj.z <- scale(Prof2$esj, center = T, scale = T)

####SONA
#reverse score
sona$ESJ4_r <- 8 - sona$ESJ4
sona$ESJ6_r <- 8 - sona$ESJ6
sona$ESJ8_r <- 8 - sona$ESJ8
sona$ESJ10_r <- 8 - sona$ESJ10
sona$ESJ13_r <- 8 - sona$ESJ13
sona$ESJ15_r <- 8 - sona$ESJ15
sona$ESJ17_r <- 8 - sona$ESJ17
sona$esj <- (sona$ESJ1 + sona$ESJ2 + sona$ESJ3 + sona$ESJ4_r + 
                sona$ESJ5 + sona$ESJ6_r + sona$ESJ7 + 
                sona$ESJ8_r + sona$ESJ9 + sona$ESJ10_r + sona$ESJ11 + 
                sona$ESJ12 + sona$ESJ13_r + sona$ESJ14 + sona$ESJ15_r + 
                sona$ESJ16 + sona$ESJ17_r)/17

#visualize data
hist(sona$esj)
boxplot(sona$esj) #no outliers

#cronbachs alpha
esj_a3 <- subset(sona, select = c(ESJ1, ESJ2, ESJ3, ESJ4_r, ESJ5, ESJ6_r, ESJ7, 
                                   ESJ8_r, ESJ9, ESJ10_r, ESJ11, ESJ12, ESJ13_r, 
                                   ESJ14, ESJ15_r, ESJ16, ESJ17_r))
psych::alpha(esj_a3)

#mean center
sona$esj.m <- scale(sona$esj, center = T)
#z-score
sona$esj.z <- scale(sona$esj, center = T, scale = T)

#####Mega data set
#reverse score
mega$ESJ4_r <- 8 - mega$ESJ4
mega$ESJ6_r <- 8 - mega$ESJ6
mega$ESJ8_r <- 8 - mega$ESJ8
mega$ESJ10_r <- 8 - mega$ESJ10
mega$ESJ13_r <- 8 - mega$ESJ13
mega$ESJ15_r <- 8 - mega$ESJ15
mega$ESJ17_r <- 8 - mega$ESJ17
mega$esj <- (mega$ESJ1 + mega$ESJ2 + mega$ESJ3 + mega$ESJ4_r + 
                mega$ESJ5 + mega$ESJ6_r + mega$ESJ7 + 
                mega$ESJ8_r + mega$ESJ9 + mega$ESJ10_r + mega$ESJ11 + 
                mega$ESJ12 + mega$ESJ13_r + mega$ESJ14 + mega$ESJ15_r + 
                mega$ESJ16 + mega$ESJ17_r)/17

#visualize data
hist(mega$esj)
boxplot(mega$esj) #no outliers

#cronbachs alpha
esj_a4 <- subset(mega, select = c(ESJ1, ESJ2, ESJ3, ESJ4_r, ESJ5, ESJ6_r, ESJ7, 
                                   ESJ8_r, ESJ9, ESJ10_r, ESJ11, ESJ12, ESJ13_r, 
                                   ESJ14, ESJ15_r, ESJ16, ESJ17_r))
psych::alpha(esj_a4)

#mean center
mega$esj.m <- scale(mega$esj, center = T)
#z-score
mega$esj.z <- scale(mega$esj, center = T, scale = T)



######################Vic Response#########################
####Prolific Sample1
Prof1$Vresp <- (Prof1$V_resp1 + Prof1$V_resp2 + Prof1$V_resp3 + Prof1$V_resp4)/4

#visualize data
hist(Prof1$Vresp)
boxplot(Prof1$Vresp) #no outliers

#cronbachs alpha
Vresp_a1 <- subset(Prof1, select = c(V_resp1, V_resp2, V_resp3, V_resp4))
psych::alpha(Vresp_a1)

####Prolific Sample 2
Prof2$Vresp <- (Prof2$V_resp1 + Prof2$V_resp2 + Prof2$V_resp3 + Prof2$V_resp4)/4

#visualize data
hist(Prof2$Vresp)
boxplot(Prof2$Vresp) #no outliers

#cronbachs alpha
Vresp_a2 <- subset(Prof2, select = c(V_resp1, V_resp2, V_resp3, V_resp4))
psych::alpha(Vresp_a2)

#####Sona
sona$Vresp <- (sona$V_resp1 + sona$V_resp2 + sona$V_resp3 + sona$V_resp4)/4

#visualize data
hist(sona$Vresp)
boxplot(sona$Vresp) #no outliers

#cronbachs alpha
Vresp_a3 <- subset(sona, select = c(V_resp1, V_resp2, V_resp3, V_resp4))
psych::alpha(Vresp_a3)

#####mega
mega$Vresp <- (mega$V_resp1 + mega$V_resp2 + mega$V_resp3 + mega$V_resp4)/4

#visualize data
hist(mega$Vresp)
boxplot(mega$Vresp) #no outliers

#cronbachs alpha
Vresp_a4 <- subset(mega, select = c(V_resp1, V_resp2, V_resp3, V_resp4))
psych::alpha(Vresp_a4)




####################Severity of the incident#######################
####Prolific sample 1
Prof1$Sev3 <- 8 - Prof1$Sev3_r
Prof1$Sev4 <- 8 - Prof1$Sev4_r
Prof1$Sev <- (Prof1$Sev1 + Prof1$Sev2 + Prof1$Sev3 + Prof1$Sev4 + Prof1$Sev5)/5

#visualize data
hist(Prof1$Sev)
boxplot(Prof1$Sev) #several outliers
boxplot.stats(Prof1$Sev)

#find value 3 sd below the mean
mean(Prof1$Sev) - (3*sd(Prof1$Sev))

#recode the values below 3 sd from the mean to be equal to 3 sd below the mean
Prof1$Sev[Prof1$Sev <= mean(Prof1$Sev) - (3*sd(Prof1$Sev))] <- mean(Prof1$Sev) - (3*sd(Prof1$Sev))

#cronbach's alpha
sev_1a <- subset(Prof1, select=c(Sev1, Sev2, Sev3, Sev4, Sev5))
psych::alpha(sev_1a)

####Prolific Sample 2
Prof2$Sev3 <- 8 - Prof2$Sev3_r
Prof2$Sev4 <- 8 - Prof2$Sev4_r
Prof2$Sev <- (Prof2$Sev1 + Prof2$Sev2 + Prof2$Sev3 + Prof2$Sev4 + Prof2$Sev5)/5

#visualize data
hist(Prof2$Sev)
boxplot(Prof2$Sev) #couple outliers to recode
boxplot.stats(Prof2$Sev)

#find value 3 sd below the mean
mean(Prof2$Sev) - (3*sd(Prof1$Sev)) #none of the values are outside 3 sds, so no need to recode

#cronbachs alpha
sev_2b <- subset(Prof2, select=c(Sev1, Sev2, Sev3, Sev4, Sev5))
psych::alpha(sev_2b)

####Sona
sona$Sev3 <- 8 - sona$Sev3_r
sona$Sev4 <- 8 - sona$Sev4_r
sona$Sev <- (sona$Sev1 + sona$Sev2 + sona$Sev3 + sona$Sev4 + sona$Sev5)/5

#visualize data
hist(sona$Sev)
boxplot(sona$Sev) #several outliers
boxplot.stats(sona$Sev)

#find value 3 sd below the mean
mean(sona$Sev) - (3*sd(sona$Sev)) #some values need to be recoded

#recode outliers to be 3 sd below the mean
sona$Sev[sona$Sev <= mean(sona$Sev) - (3*sd(sona$Sev))] <- mean(sona$Sev) - (3*sd(sona$Sev))

#cronbachs alpha
sev_2c <- subset(sona, select=c(Sev1, Sev2, Sev3, Sev4, Sev5))
psych::alpha(sev_2c)

####Mega
mega$Sev3 <- 8 - mega$Sev3_r
mega$Sev4 <- 8 - mega$Sev4_r
mega$Sev <- (mega$Sev1 + mega$Sev2 + mega$Sev3 + mega$Sev4 + mega$Sev5)/5

#visualize data
hist(mega$Sev)
boxplot(mega$Sev) #several outliers
boxplot.stats(mega$Sev)

#find 3 sd below the mean
mean(mega$Sev) - (3*sd(mega$Sev))

#recode outliers to be equal to 3 sd below the mean
mega$Sev[mega$Sev <= mean(mega$Sev) - (3*sd(mega$Sev))] <- mean(mega$Sev) - (3*sd(mega$Sev))

#cronbachs alpha
sev_2d <- subset(mega, select=c(Sev1, Sev2, Sev3, Sev4, Sev5))
psych::alpha(sev_2d)






#####################TIPI - Victim#########################
######Prolific Sample 1
Prof1$TIPI_V2_r <- 8 - Prof1$TIPI_V2
Prof1$TIPI_V4_r <- 8 - Prof1$TIPI_V4
Prof1$TIPI_V6_r <- 8 - Prof1$TIPI_V6
Prof1$TIPI_V8_r <- 8 - Prof1$TIPI_V8
Prof1$TIPI_V10_r <- 8 - Prof1$TIPI_V10

Prof1$TIPI_V <- (Prof1$TIPI_V1 + Prof1$TIPI_V2_r + Prof1$TIPI_V3 + Prof1$TIPI_V4_r + 
                   Prof1$TIPI_V5 + Prof1$TIPI_V6_r + Prof1$TIPI_V7 + Prof1$TIPI_V8_r + 
                   Prof1$TIPI_V9 + Prof1$TIPI_V10_r)/10
#visualize data
hist(Prof1$TIPI_V)
boxplot(Prof1$TIPI_V)
boxplot.stats(Prof1$TIPI_V)

#find 3 sd below and above the mean
mean(Prof1$TIPI_V) - (3*sd(Prof1$TIPI_V)) #need to recode some outliers below
mean(Prof1$TIPI_V) + (3*sd(Prof1$TIPI_V)) #no outliers above to recode

#recode outliers 3sd below the mean
Prof1$TIPI_V[Prof1$TIPI_V <= mean(Prof1$TIPI_V) - (3*sd(Prof1$TIPI_V))] <- mean(Prof1$TIPI_V) - (3*sd(Prof1$TIPI_V))


#cronbach alpha                                                                                                 
TIPI_Vic1 <- subset(Prof1, select = c(TIPI_V1, TIPI_V2_r, TIPI_V3, TIPI_V4_r, 
                                     TIPI_V5, TIPI_V6_r, TIPI_V7, TIPI_V8_r,
                                     TIPI_V9, TIPI_V10_r))
psych::alpha(TIPI_Vic1) #six is a bad item. but we are going to keep it since alpha is fine an its an established scale 

#####Prolific Sample 2
Prof2$TIPI_V2_r <- 8 - Prof2$TIPI_V2
Prof2$TIPI_V4_r <- 8 - Prof2$TIPI_V4
Prof2$TIPI_V6_r <- 8 - Prof2$TIPI_V6
Prof2$TIPI_V8_r <- 8 - Prof2$TIPI_V8
Prof2$TIPI_V10_r <- 8 - Prof2$TIPI_V10

Prof2$TIPI_V <- (Prof2$TIPI_V1 + Prof2$TIPI_V2_r + Prof2$TIPI_V3 + Prof2$TIPI_V4_r + 
                   Prof2$TIPI_V5 + Prof2$TIPI_V6_r + Prof2$TIPI_V7 + Prof2$TIPI_V8_r + 
                   Prof2$TIPI_V9 + Prof2$TIPI_V10_r)/10

#visualize data
hist(Prof2$TIPI_V)
boxplot(Prof2$TIPI_V) #many outliers - need to recode
boxplot.stats(Prof2$TIPI_V)

#find the value that is 3 sd above and below the mean
mean(Prof2$TIPI_V) - (3*sd(Prof2$TIPI_V)) #have some below we need to recode
mean(Prof2$TIPI_V) + (3*sd(Prof2$TIPI_V)) #have some above to recode as well

#recode values outside of +/- 3 sd to 3 sd
Prof2$TIPI_V[Prof2$TIPI_V <= mean(Prof2$TIPI_V) - (3*sd(Prof2$TIPI_V))] <- mean(Prof2$TIPI_V) - (3*sd(Prof2$TIPI_V))
Prof2$TIPI_V[Prof2$TIPI_V >= mean(Prof2$TIPI_V) + (3*sd(Prof2$TIPI_V))] <- mean(Prof2$TIPI_V) + (3*sd(Prof2$TIPI_V))
boxplot.stats(Prof2$TIPI_V)

#cronbach alpha
TIPI_Vic2 <- subset(Prof2, select = c(TIPI_V1, TIPI_V2_r, TIPI_V3, TIPI_V4_r, 
                                      TIPI_V5, TIPI_V6_r, TIPI_V7, TIPI_V8_r,
                                      TIPI_V9, TIPI_V10_r))
psych::alpha(TIPI_Vic2)

#######Sona
#reverse score
sona$TIPI_V2_r <- 8 - sona$TIPI_V2
sona$TIPI_V4_r <- 8 - sona$TIPI_V4
sona$TIPI_V6_r <- 8 - sona$TIPI_V6
sona$TIPI_V8_r <- 8 - sona$TIPI_V8
sona$TIPI_V10_r <- 8 - sona$TIPI_V10

#scale average
sona$TIPI_V <- (sona$TIPI_V1 + sona$TIPI_V2_r + sona$TIPI_V3 + sona$TIPI_V4_r + 
                   sona$TIPI_V5 + sona$TIPI_V6_r + sona$TIPI_V7 + sona$TIPI_V8_r + 
                   sona$TIPI_V9 + sona$TIPI_V10_r)/10

#visualize it
hist(sona$TIPI_V)
boxplot(sona$TIPI_V) #many outliers - need to recode
boxplot.stats(sona$TIPI_V)

#find values that are 3sd above and below the mean
mean(sona$TIPI_V) - (3*sd(sona$TIPI_V)) #some values below need to be recoded
mean(sona$TIPI_V) + (3*sd(sona$TIPI_V)) #no values above to recode

#recode values outside of -3 sd to be -3sd
sona$TIPI_V[sona$TIPI_V <= mean(sona$TIPI_V) - (3*sd(sona$TIPI_V))] <- mean(sona$TIPI_V) - (3*sd(sona$TIPI_V))

#cronbachs alpha
TIPI_Vic3 <- subset(sona, select = c(TIPI_V1, TIPI_V2_r, TIPI_V3, TIPI_V4_r, 
                                      TIPI_V5, TIPI_V6_r, TIPI_V7, TIPI_V8_r,
                                      TIPI_V9, TIPI_V10_r))
psych::alpha(TIPI_Vic3)

#######Mega
#reverse score
mega$TIPI_V2_r <- 8 - mega$TIPI_V2
mega$TIPI_V4_r <- 8 - mega$TIPI_V4
mega$TIPI_V6_r <- 8 - mega$TIPI_V6
mega$TIPI_V8_r <- 8 - mega$TIPI_V8
mega$TIPI_V10_r <- 8 - mega$TIPI_V10

mega$TIPI_V <- (mega$TIPI_V1 + mega$TIPI_V2_r + mega$TIPI_V3 + mega$TIPI_V4_r + 
                  mega$TIPI_V5 + mega$TIPI_V6_r + mega$TIPI_V7 + mega$TIPI_V8_r + 
                  mega$TIPI_V9 + mega$TIPI_V10_r)/10
hist(mega$TIPI_V)
boxplot(mega$TIPI_V) #many outliers - need to recode
boxplot.stats(mega$TIPI_V)

#find 3 sd above and below the mean
mean(mega$TIPI_V) - (3*sd(mega$TIPI_V)) #have some below that need to be recoded
mean(mega$TIPI_V) + (3*sd(mega$TIPI_V)) #some above need to be recoded too

#recode outliers
mega$TIPI_V[mega$TIPI_V <= mean(mega$TIPI_V) - (3*sd(mega$TIPI_V))] <- mean(mega$TIPI_V) - (3*sd(mega$TIPI_V))
mega$TIPI_V[mega$TIPI_V >= mean(mega$TIPI_V) + (3*sd(mega$TIPI_V))] <- mean(mega$TIPI_V) + (3*sd(mega$TIPI_V))

#cronbachs alpha
TIPI_Vic4 <- subset(mega, select = c(TIPI_V1, TIPI_V2_r, TIPI_V3, TIPI_V4_r, 
                                     TIPI_V5, TIPI_V6_r, TIPI_V7, TIPI_V8_r,
                                     TIPI_V9, TIPI_V10_r))
psych::alpha(TIPI_Vic4)





####################Likeability of victim####################
#######Prolific Sample 1
#for Prof1, we are only using the first two items in the scale since the others were not displayed correctly
Prof1$Like_V <- (Prof1$Like_V1 + Prof1$Like_V2)/2

boxplot(Prof1$Like_V) #no outliers

#######Prolific Sample 2
#for sample 2, we are using all 5 items in the scale
Prof2$Like_V <- (Prof2$Like_V1 + Prof2$Like_V2 + Prof2$Like_V3 + Prof2$Like_V4 + 
                   Prof2$Like_V5)/5
#visualize data
hist(Prof2$Like_V)
boxplot(Prof2$Like_V) #one potential outlier
boxplot.stats(Prof2$Like_V)

#check what 3 sd above mean is
mean(Prof2$Like_V) + 3*sd(Prof2$Like_V) #outlier is not > 3 sd above mean

#cronbachs alpha
LikeV2 <- subset(Prof2, select = c(Like_V1, Like_V2, Like_V3, Like_V4, Like_V5))
psych::alpha(LikeV2)

######Sona
sona$Like_V <- (sona$Like_V1 + sona$Like_V2 + sona$Like_V3 + sona$Like_V4 + 
                  sona$Like_V5)/5
hist(sona$Like_V)
boxplot(sona$Like_V) #some outliers
boxplot.stats(sona$Like_V)

#find 3 sd above and below mean
mean(sona$Like_V, na.rm = T) - 3*sd(sona$Like_V, na.rm = T) #some outliers below need to be recoded
mean(sona$Like_V, na.rm = T) + 3*sd(sona$Like_V, na.rm = T) #some above need to be recoded

#recode outliers
sona$Like_V[sona$Like_V <= mean(sona$Like_V, na.rm = T) - 3*sd(sona$Like_V, na.rm = T)] <- mean(sona$Like_V, na.rm = T) - 3*sd(sona$Like_V, na.rm = T)
sona$Like_V[sona$Like_V >= mean(sona$Like_V, na.rm = T) + 3*sd(sona$Like_V, na.rm = T)] <- mean(sona$Like_V, na.rm = T) + 3*sd(sona$Like_V, na.rm = T)

#cronbachs alpha
LikeV3 <- subset(sona, select = c(Like_V1, Like_V2, Like_V3, Like_V4, Like_V5))
psych::alpha(LikeV3)

#######Mega
mega$Like_V <- (mega$Like_V1 + mega$Like_V2 + mega$Like_V3 + mega$Like_V4 +
                  mega$Like_V5)/5          

hist(mega$Like_V)  
boxplot(mega$Like_V) #some potential outliers above and below
boxplot.stats(mega$Like_V)

#calculate 3 sd above and below mean
mean(mega$Like_V, na.rm = T) - 3*sd(mega$Like_V, na.rm = T) #some below to recode
mean(mega$Like_V, na.rm = T) + 3*sd(mega$Like_V, na.rm = T) #some above to recode

#recode outliers
mega$Like_V[mega$Like_V <= mean(mega$Like_V, na.rm = T) - 3*sd(mega$Like_V, na.rm = T)] <- 
  mean(mega$Like_V, na.rm = T) - 3*sd(mega$Like_V, na.rm = T)
mega$Like_V[mega$Like_V >= mean(mega$Like_V, na.rm = T) + 3*sd(mega$Like_V, na.rm = T)] <- 
  mean(mega$Like_V, na.rm = T) + 3*sd(mega$Like_V, na.rm = T)

#cronbach's alpha
LikeV4 <- subset(mega, select = c(Like_V1, Like_V2, Like_V3, Like_V4, Like_V5))
psych::alpha(LikeV4)






#####################SA - Victim#####################
###NEED TO REVERSE CODE THIS VARIABLE#####
#####Prolific Sample 1
Prof1$SA_V <- (Prof1$SA_V_1 + Prof1$SA_V_2 + Prof1$SA_V_3 + Prof1$SA_V_4 + 
                 Prof1$SA_V_5)/5
Prof1$SA_V.rc <- 8 - Prof1$SA_V

#visualize data
hist(Prof1$SA_V)
boxplot(Prof1$SA_V.rc) #several outliers
boxplot.stats(Prof1$SA_V) 

#calculate 3 sd above and below mean
mean(Prof1$SA_V.rc, na.rm = T) - 3*sd(Prof1$SA_V.rc, na.rm = T) #none fall 3 sd below mean
mean(Prof1$SA_V.rc, na.rm = T) + 3*sd(Prof1$SA_V.rc, na.rm = T) #none fall 3 sd above mean

#cronbachs alpha
SA_va1 <- subset(Prof1, select = c(SA_V_1, SA_V_2, SA_V_3, SA_V_4, SA_V_5))
psych::alpha(SA_va1)

#####Prolific Sample 2
Prof2$SA_V <- (Prof2$SA_V_1 + Prof2$SA_V_2 + Prof2$SA_V_3 + Prof2$SA_V_4 + 
                 Prof2$SA_V_5)/5
Prof2$SA_V.rc <- 8 - Prof2$SA_V

#visualize data
hist(Prof2$SA_V)
boxplot(Prof2$SA_V.rc) #several outliers to recode
boxplot.stats(Prof2$SA_V.rc)

#find 3 sd above and below mean
mean(Prof2$SA_V.rc) - 3*sd(Prof2$SA_V.rc) #no outliers below mean to recode
mean(Prof2$SA_V.rc) + 3*sd(Prof2$SA_V.rc) #no outliers above mean to recode

#cronbachs alpha
SA_va2 <- subset(Prof2, select = c(SA_V_1, SA_V_2, SA_V_3, SA_V_4, SA_V_5))
psych::alpha(SA_va2)


######Sona
sona$SA_V <- (sona$SA_V_1 + sona$SA_V_2 + sona$SA_V_3 + sona$SA_V_4 + sona$SA_V_5)/5
sona$SA_V.rc <- 8 - sona$SA_V


#visualize data
hist(sona$SA_V.rc)
boxplot(sona$SA_V.rc) #several outliers
boxplot.stats(sona$SA_V.rc)

#calculate 3 sd above and below mean
mean(sona$SA_V.rc) - 3*sd(sona$SA_V.rc) #not outliers below to recode
mean(sona$SA_V.rc) + 3*sd(sona$SA_V.rc) #some outliers above to recode

#recode outliers above to be = to 3sd above the means
sona$SA_V.rc[sona$SA_V.rc >= mean(sona$SA_V.rc, na.rm = T) + 3*sd(sona$SA_V.rc, na.rm = T)] <- 
  mean(sona$SA_V.rc, na.rm = T) + 3*sd(sona$SA_V.rc, na.rm = T)
boxplot.stats(sona$SA_V.rc)

#cronbach's alpha
SA_V3 <- subset(sona, select = c(SA_V_1, SA_V_2, SA_V_3, SA_V_4, SA_V_5))
psych::alpha(SA_V3)

######Mega
mega$SA_V <- (mega$SA_V_1 + mega$SA_V_2 + mega$SA_V_3 + mega$SA_V_4 + mega$SA_V_5)/5
mega$SA_V.rc <- 8 - mega$SA_V


#visualize data
hist(mega$SA_V.rc)
boxplot(mega$SA_V.rc) #some outliers 
boxplot.stats(mega$SA_V.rc)

#calculate 3sd above and below the mean
mean(mega$SA_V.rc, na.rm = T) - 3*sd(mega$SA_V.rc, na.rm = T) #no outliers below to recode
mean(mega$SA_V.rc, na.rm = T) + 3*sd(mega$SA_V.rc, na.rm = T) #no outliers above to recode

#cronbach's alpha
SA_V4 <- subset(mega, select = c(SA_V_1, SA_V_2, SA_V_3, SA_V_4, SA_V_5))
psych::alpha(SA_V4)




###################Empathy for the Victim######################### 
######Prolific Sample 1
Prof1$Emp_V <- (Prof1$Emp_V_1 + Prof1$Emp_V_2 + Prof1$Emp_V_5 + Prof1$Emp_V_10 +
                  Prof1$Emp_V_15 + Prof1$Emp_V_17)/6
#visualize data
hist(Prof1$Emp_V)
boxplot(Prof1$Emp_V)

#cronbachs alpha
Emp_Va1 <- subset(Prof1, select = c(Emp_V_1, Emp_V_2, Emp_V_5, Emp_V_10, 
                                   Emp_V_15, Emp_V_17))
psych::alpha(Emp_Va1)

#######prolific Sample 2
Prof2$Emp_V <- (Prof2$Emp_V_1 + Prof2$Emp_V_2 + Prof2$Emp_V_5 + Prof2$Emp_V_10 +
                  Prof2$Emp_V_15 + Prof2$Emp_V_17)/6
#visualize data
hist(Prof2$Emp_V)
boxplot(Prof2$Emp_V) #no outliers

#cronbachs alpha
Emp_Va2 <- subset(Prof2, select = c(Emp_V_1, Emp_V_2, Emp_V_5, Emp_V_10, 
                                    Emp_V_15, Emp_V_17))
psych::alpha(Emp_Va2)

#####sona
sona$Emp_V <- (sona$Emp_V_1 + sona$Emp_V_2 + sona$Emp_V_5 + sona$Emp_V_10 + 
                 sona$Emp_V_15 + sona$Emp_V_17)/6

#visualize data
hist(sona$Emp_V)
boxplot(sona$Emp_V) #no outliers

#cronbach's alphs
Emp_Va3 <- subset(sona, select = c(Emp_V_1, Emp_V_2, Emp_V_5, Emp_V_10, 
                                  Emp_V_15, Emp_V_17))
psych::alpha(Emp_Va3)


####mega
mega$Emp_V <- (mega$Emp_V_1 + mega$Emp_V_2 + mega$Emp_V_5 + mega$Emp_V_10 +
                 mega$Emp_V_15 + mega$Emp_V_17)/6

#visualize data
hist(mega$Emp_V)
boxplot(mega$Emp_V) #no outliers

#cronbachs alpha
Emp_Va4 <- subset(mega, select = c(Emp_V_1, Emp_V_2, Emp_V_5, Emp_V_10, Emp_V_15,
                                   Emp_V_17))
psych::alpha(Emp_Va4)


##################Distress towards the Victim#############
#####Prolific sample 1
Prof1$distV <- (Prof1$Emp_V_4 + Prof1$Emp_V_6 + Prof1$Emp_V_7 + 
                  Prof1$Emp_V_13 + Prof1$Emp_V_16 + Prof1$Emp_V_18)/6
#visualize data
hist(Prof1$distV)
boxplot(Prof1$distV) #no outliers

#cronbachs alpha
distV1 <- subset(Prof1, select = c(Emp_V_4, Emp_V_6, Emp_V_7, Emp_V_13, 
                                   Emp_V_16, Emp_V_18))
psych::alpha(distV1)

######prolific sample 2
Prof2$distV <- (Prof2$Emp_V_4 + Prof2$Emp_V_6 + Prof2$Emp_V_7 +
                  Prof2$Emp_V_13 + Prof2$Emp_V_16 + Prof2$Emp_V_18)/6

#visualize data
hist(Prof2$distV)
boxplot(Prof2$distV) #no outliers

#cronbachs alpha
distV2 <- subset(Prof2, select =c(Emp_V_4, Emp_V_6, Emp_V_7, Emp_V_13, Emp_V_16, Emp_V_18))
psych::alpha(distV2)

######Sona
sona$distV <- (sona$Emp_V_4 + sona$Emp_V_6 + sona$Emp_V_7 + sona$Emp_V_13 + 
                 sona$Emp_V_16 + sona$Emp_V_18)/6

#visualize data
hist(sona$distV)
boxplot(sona$distV) #no outliers

#cronbachs alpha
distV3 <- subset(sona, select = c(Emp_V_4, Emp_V_6, Emp_V_7, Emp_V_13, Emp_V_16, Emp_V_18))
psych::alpha(distV3)

#####mega sample
mega$distV <- (mega$Emp_V_4 + mega$Emp_V_6 + mega$Emp_V_7 + mega$Emp_V_13 + 
                 mega$Emp_V_16 + mega$Emp_V_18)/6

#visualize data
hist(mega$distV)
boxplot(mega$distV) #no outliers

#cronbachs alpha
distV4 <- subset(mega, select = c(Emp_V_4, Emp_V_6, Emp_V_7, Emp_V_13, Emp_V_16, Emp_V_18))
psych::alpha(distV4)



#####################Data Subsets###################
#make a reverse coded SES variable
Prof1$SES10 <- 1 - Prof1$SES
Prof2$SES10 <- 1 - Prof2$SES
sona$SES10 <- 1 - sona$SES
mega$SES10 <- 1 - mega$SES
#make atonement condition a factor
#reverse code atonement so that 2 = low, 1 = med, and 0 = high
Prof1$atone.r <- 2-Prof1$Atonement
Prof1$atone.r <- factor(Prof1$atone.r, 
                           levels = c("0", "1", "2"),
                           labels = c("High", "Med", "Low"))
Prof2$atone.r <- 2-Prof2$Atonement
Prof2$atone.r <- factor(Prof2$atone.r, 
                        levels = c("0", "1", "2"),
                        labels = c("High", "Med", "Low"))
sona$atone.r <- 2-sona$Atonement
sona$atone.r <- factor(sona$atone.r, 
                        levels = c("0", "1", "2"),
                        labels = c("High", "Med", "Low"))
mega$atone.r <- 2-mega$Atonement
mega$atone.r <- factor(mega$atone.r, 
                        levels = c("0", "1", "2"),
                        labels = c("High", "Med", "Low"))
mega$atone.test <- 2 - mega$Atonement
mega$atone.test <- as.factor(mega$atone.test)


#make the sample variable a factor in the mega data set
#mega$sample <- factor(mega$sample, 
    #                  levels = c("1", "2", "3"),
     #                 labels = c("Prolific1", "Prolific2", "Sona"))


###Dummy coded contrasts
#Comparing Prolific 1 to Prolific 2, Prof1 = -1, sona = 0, Prof2 = 1
mega$sampleD1 <- as.numeric(dplyr::recode(mega$sample, "1" = "-1", "2" = "1", "3" = "0"))

#Comparing Sona to Prolific1/Prolific 2, Sona = -2, Prof1 = 1, Prof 2 = 1
mega$sampleD2 <- as.numeric(dplyr::recode(mega$sample, "1" = "1", "2" = "1", "3" = "-2"))

#High Status Condition
p1HS <- subset(Prof1, SES == 1)
p2HS <- subset(Prof2, SES == 1)
sHS <- subset(sona, SES == 1)
mHS <- subset(mega, SES ==1)

#Low status Condition
p1LS <- subset(Prof1, SES == 0)
p2LS <- subset(Prof2, SES == 0)
sLS <- subset(sona, SES == 0)
mLS <- subset(mega, SES == 0)




########################################Analysis########################################
#Setting Helmert Contrasts
contr1 <- list(atone.r = contr.helmert)

  #we are using the reverse coded atonement to create the contrasts. 
  #this will contrast 0 and 1 to 2 (high/med to low) and 0 to 1 (high to med)




###Research Question 2 and 3: Looking at DVs relevant to the Victim####
####Severity of the incidence####

#prolific sample 1, high status
sev_prof1h <- lm(Sev ~ esj.m*atone.r, data = p1HS, contrasts = contr1)
summary(sev_prof1h)

#prolific sample 1, low status
sev_prof1l <- lm(Sev ~ esj.m*atone.r, data = p1LS, contrasts = contr1)
summary(sev_prof1l)

#prolific sample 1 three way interaction
sev_prof1 <- lm(Sev ~ esj.m*atone.r*SES, data = Prof1)
summary(sev_prof1)

#prolific sample 2, high status
sev_prof2h <- lm(Sev ~ esj.m*atone.r, data = p2HS, contrasts = contr1)
summary(sev_prof2h)

#prolific sample 2, low status
sev_prof2l <- lm(Sev ~ esj.m*atone.r, data = p2LS, contrasts = contr1)
summary(sev_prof2l)

#prolific sample 2, three way interaction
sev_prof2 <- lm(Sev ~ esj.m*atone.r*SES, data = Prof2, contrasts = contr1)
summary(sev_prof2)

#sona sample, high status
sev_sonah <- lm(Sev ~ esj.m*atone.r, data = sHS, contrasts = contr1)
summary(sev_sonah)

#sona sample, low status
sev_sonal <- lm(Sev ~ esj.m*atone.r, data = sLS, contrasts = contr1)
summary(sev_sonal)

#sona sample, three way interaction
sev_sona <- lm(Sev ~ esj.m*atone.r*SES, data = sona, contrasts = contr1)
summary(sev_sona)


#Severity of incidence - mega sample - hierarchical regression###

#mega sample, high status,
#step 1 - sample 
m1s1 <- lm(Sev ~ sampleD1 + sampleD2, data = mHS)
summary(m1s1) #sample predicts severity of incident
#step 2 - main effects
m1s2 <- lm(Sev ~ sampleD1 + sampleD2 + esj.m + atone.r, data = mHS, contrasts = contr1)
summary(m1s2)
anova(m1s1, m1s2)
#step 3 - two way interactions
m1s3 <- lm(Sev ~ sampleD1 + sampleD2 +esj.m*atone.r, data = mHS, contrasts = contr1)
summary(m1s3)
anova(m1s2, m1s3) #no stat difference in steps


#mega sample, low status, controlled for sample differences
#step 1 - sample
m2s1 <- lm(Sev ~ sampleD1 + sampleD2, data = mLS)
summary(m2s1) #sample significant predictor
#step 2 - main effects
m2s2 <- lm(Sev ~ sampleD1 + sampleD2 + esj.m + atone.r, data = mLS, contrasts = contr1)
summary(m2s2)
anova(m2s1, m2s2)
#step 3 - two way interactions
m2s3 <- lm(Sev ~ sampleD1 + sampleD2 + esj.m*atone.r, data = mLS, contrasts = contr1)
summary(m2s3)
#plot(m2s3)
anova(m2s2, m2s3)
#plot_model(m2s3)
simple_slopes(m2s3)
ggeffect(m2s3)


#mega sample, three way interactions
#step 1 - sample
m3s1 <- lm(Sev ~ sampleD1 + sampleD2, data = mega)
summary(m3s1)
#Step 2 - main effects
m3s2 <- lm(Sev ~ sampleD1 + sampleD2 + SES + esj.m + atone.r, data = mega, contrasts = contr1)
summary(m3s2)
anova(m3s1, m3s2)
#step 3 - two way interactions
m3s3 <- lm(Sev ~ sampleD1 + sampleD2 + SES*esj.m + SES*atone.r + esj.m*atone.r, data = mega, contrasts = contr1)
summary(m3s3)
anova(m3s2, m3s3)
#step 4 - three way interaction
m3s4 <- lm(Sev ~ sampleD1 + sampleD2 + SES*esj.m*atone.r, data = mega, contrasts = contr1)
summary(m3s4)
anova(m3s3, m3s4)

#step 4 - three-way interaction with SES reverse coded
m3s4r <- lm(Sev ~ sampleD1 + sampleD2 +SES10*esj.m*atone.r, data=mega, contrasts = contr1)
summary(m3s4r)
sev_megal <- lm(Sev ~ esj.m*atone.r + sample, data = mLS, contrasts = contr1)
summary(sev_megal)




#####Victim responsibility####
#prolific sample 1, high status
TIPIv_prof1h <- lm(TIPI_V ~ esj.m*atone.r, data = p1HS, contrasts = contr1)
summary(TIPIv_prof1h)

#Prolific sample 1, low status
TIPIv_prof1l <- lm(TIPI_V ~ esj.m*atone.r, data = p1LS, contrasts = contr1)
summary(TIPIv_prof1l)

#Prolific sample 1, three way interaction
TIPIv_prof1 <- lm(TIPI_V ~ esj.m*atone.r*SES, data = Prof1, contrasts = contr1)
summary(TIPIv_prof1)

#Prolific sample 2, high status
Vresp_prof2h <- lm(Vresp ~ esj.m*atone.r, data = p2HS, contrasts = contr1)
summary(Vresp_prof2h)

#Profilic Sample 2, low status
Vresp_prof2l <- lm(Vresp ~ esj.m*atone.r, data = p2LS, contrasts = contr1)
summary(Vresp_prof2b)

#Prolific Sample 2, three way interaction
Vresp_prof2 <- lm(Vresp ~ esj.m*atone.r*SES, data = Prof2, contrasts = contr1)
summary(Vresp_prof2)

#sona sample, high status
Vresp_sonah <- lm(Vresp ~ esj.m*atone.r, data = sHS, contrasts = contr1)
summary(Vresp_sonah)

#sona sample, low status
Vresp_sonal <- lm(Vresp ~ esj.m*atone.r, data = sLS, contrasts = contr1)
summary(Vresp_sonal)

#sona sample, three way interaction
Vresp_sona <- lm(Vresp ~ esj.m*atone.r*SES, data = sona, contrasts = contr1)
summary(Vresp_sona)

#mega sample - high status - hierarchical regression
#step 1 - sample
Vresp_m1s1 <- lm(Vresp ~ sampleD1 + sampleD2, data = mHS)
summary(Vresp_m1s1)
#step 2 - main effects
Vresp_m1s2 <- lm(Vresp ~ sampleD1 + sampleD2 + esj.m + atone.r, data = mHS, contrasts = contr1)
summary(Vresp_m1s2)
anova(Vresp_m1s1, Vresp_m1s2)
#step 3 - interactions
Vresp_m1s3 <- lm(Vresp ~ sampleD1 + sampleD2 + esj.m*atone.r, data = mHS, contrasts = contr1)
summary(Vresp_m1s3)
anova(Vresp_m1s2, Vresp_m1s3)
  #simple Slopes
Vresp_ss <- lm(Vresp ~ esj*Atonement, data = mHS)
simple_slopes(Vresp_ss)


#mega sample - low status - hierarchical regression
#step 1 - sample
Vresp_m2s1 <- lm(Vresp ~ sampleD1 + sampleD2, data = mLS)
summary(Vresp_m2s1)
#step 2 - main effects
Vresp_m2s2 <- lm(Vresp ~ sampleD1 + sampleD2 + esj.m + atone.r, data = mLS, contrasts = contr1)
summary(Vresp_m2s2)
anova(Vresp_m2s1, Vresp_m2s2)
#step 3 - interactions
Vresp_m2s3 <- lm(Vresp ~ sampleD1 + sampleD2 + esj.m*atone.r, data = mLS, contrasts = contr1)
summary(Vresp_m2s3)
anova(Vresp_m2s2, Vresp_m2s3)

#mega sample - three way interaction - hierarchical regressions
#step 1 - sample
Vresp_m3s1 <- lm(Vresp ~ sampleD1 + sampleD2, data = mega)
summary(Vresp_m3s1)
#step 2 - main effects
Vresp_m3s2 <- lm(Vresp ~ sampleD1 + sampleD2 + esj.m + atone.r + SES, data = mega, contrasts = contr1)
summary(Vresp_m3s2)
anova(Vresp_m3s1, Vresp_m3s2)
#step 3 - two way interactions
Vresp_m3s3 <- lm(Vresp ~ sampleD1 + sampleD2 + esj.m*atone.r + esj.m*SES + atone.r*SES, data =mega, contrasts = contr1)
summary(Vresp_m3s3)
anova(Vresp_m3s2, Vresp_m3s3)
#step 4 - three way interaction
Vresp_m3s4 <- lm(Vresp ~ sampleD1 + sampleD2 + esj.m*atone.r*SES, data = mega, contrasts = contr1)
summary(Vresp_m3s4)
anova(Vresp_m3s3, Vresp_m3s4)

Vresp_m3s5 <- lm(Vresp ~ sampleD1 + sampleD2 + esj.m*atone.r*SES10, data = mega, contrasts = contr1)
summary(Vresp_m3s5)


#####TIPI - Vict####
#Prolific sample 1, high status
TIPIv_prof1h <- lm(TIPI_V ~ esj.m*atone.r, data = p1HS, contrasts = contr1)
summary(TIPIv_prof1h)

#Prolific sample 1, low status
TIPIv_prof1l <- lm(TIPI_V ~ esj.m*atone.r, data = p1LS, contrasts = contr1)
summary(TIPIv_prof1l)

#prolific sample 1, three way interaction
TIPIv_prof1 <- lm(TIPI_V ~ esj.m*atone.r*SES, data = Prof1, contrasts = contr1)
summary(TIPIv_prof1)

#Prolific sample 2, high status
TIPIv_prof2h <- lm(TIPI_V ~ esj.m*atone.r, data = p2HS, contrasts = contr1)
summary(TIPIv_prof2h)

#Prolific sample 2, low status
TIPIv_prof2l <- lm(TIPI_V ~ esj.m*atone.r, data = p2LS, contrasts = contr1)
summary(TIPIv_prof2l)

#Prolific sample 2, three way interaction
TIPIv_prof2 <- lm(TIPI_V ~ esj.m*atone.r*SES, data = Prof2, contrasts = contr1)
summary(TIPIv_prof2)

#sona sample, high status
TIPIv_sonah <- lm(TIPI_V ~ esj.m*atone.r, data = sHS, contrasts = contr1)
summary(TIPIv_sonah)

#sona sample, low status
TIPIv_sonal <- lm(TIPI_V ~ esj.m*atone.r, data = sLS, contrasts = contr1)
summary(TIPIv_sonal)

#sona sample, three way interaction
TIPIv_sona <- lm(TIPI_V ~ esj.m*atone.r*SES, data = sona, contrasts = contr1)
summary(TIPIv_sona)

#mega sample - hierarchical regression - high status
#step 1 - sample
TIPIs1 <- lm(TIPI_V ~ sampleD1 + sampleD2, data = mHS)
summary(TIPIs1)
#step 2 - main effects
TIPIs2 <- lm(TIPI_V ~ sampleD1 + sampleD2 + atone.r + esj.m, data = mHS, contrasts = contr1)
summary(TIPIs2)
anova(TIPIs1, TIPIs2)
#step 3 - two way interactions
TIPIs3 <- lm(TIPI_V ~ sampleD1 + sampleD2 + atone.r*esj.m, data = mHS, contrasts = contr1)
summary(TIPIs3)
anova(TIPIs2, TIPIs3)


#mega sample - hierarchical regression - low status
#step 1 - sample
TIPI2s1 <- lm(TIPI_V ~ sampleD1 + sampleD2, data = mLS)
summary(TIPI2s1)
#step 2 - main effects
TIPI2s2 <- lm(TIPI_V ~ sampleD1 + sampleD2 + esj.m + atone.r, data = mLS, contrasts= contr1)
summary(TIPI2s2)
anova(TIPI2s1, TIPI2s2)
#step 3 - two way interactions
TIPI2s3 <- lm(TIPI_V ~ sampleD1 + sampleD2 + esj.m*atone.r, data = mLS, contrasts = contr1)
summary(TIPI2s3)
anova(TIPI2s2, TIPI2s3)
TIPIss <- lm(TIPI_V ~ esj*Atonement, data = mLS)
simple_slopes(TIPIss)

#mega sample - hierarchical regression - three way interaction
#step 1 - sample
TIPI3s1 <- lm(TIPI_V ~ sampleD1 + sampleD2, data = mega)
summary(TIPI3s1)
#step 2 - main effects
TIPI3s2 <- lm(TIPI_V ~ sampleD1 + sampleD2 + atone.r + esj.m + SES, data = mega, contrasts = contr1)
summary(TIPI3s2)
anova(TIPI3s1, TIPI3s2)
#step 3 - two way interactions
TIPI3s3 <- lm(TIPI_V ~ sampleD1 + sampleD2 + atone.r*esj.m + atone.r*SES + esj.m*SES, data = mega, contrasts = contr1)
summary(TIPI3s3)
anova(TIPI3s2, TIPI3s3)
#step 4 - three way interaction
TIPI3s4 <- lm(TIPI_V ~ sampleD1 + sampleD2 + atone.r*esj.m*SES, data = mega, contrasts = contr1)
summary(TIPI3s4)
anova(TIPI3s3, TIPI3s4)

TIPI3s5 <- lm(TIPI_V ~ sampleD1 + sampleD2 + atone.r*esj.m*SES10, data = mega, contrasts = contr1)
summary(TIPI3s5)




######Likeability of Vic######
#Prolific sample 1, high status
LikeV_prof1h <- lm(Like_V ~ esj.m*atone.r, data = p1HS, contrasts = contr1)
summary(LikeV_prof1h)

#Prolific sample 1, low status
LikeV_prof1l <- lm(Like_V ~ esj.m*atone.r, data = p1LS, contrasts = contr1)
Summary(LikeV_prof1l)

#Prolific sample 1, three way interaction
LikeV_prof1 <- lm(Like_V ~ esj.m*atone.r*SES, data = Prof1, contrasts = contr1)
summary(LikeV_prof1)

#Prolific Sample 2, high status
LikeV_prof2h <- lm(Like_V ~ esj.m*atone.r, data = p2HS, contrasts = contr1)
summary(LikeV_prof2h)

#Prolific Sample 2, low status
LikeV_prof2l <- lm(Like_V ~ esj.m*atone.r, data = p2LS, contrasts = contr1)
summary(LikeV_prof2l)

#Prolific sample 2, three way interaction
LikeV_prof2 <- lm(Like_V ~ esj.m*atone.r*SES, data = Prof2, contrasts = contr1)
summary(LikeV_prof2)

#sona sample, high status
LikeV_sonah <- lm(Like_V ~ esj.m*atone.r, data = sHS, contrasts = contr1)
summary(LikeV_sonah)

#sona sample, low status
LikeV_sonal <- lm(Like_V ~ esj.m*atone.r, data = sLS, contrasts = contr1)
summary(LikeV_sonal)

#sona sample, three way interaction
LikeV_sona <- lm(Like_V ~ esj.m*atone.r*SES, data = sona, contrasts = contr1)
summary(LikeV_sona)

#mega sample - hierarchical regression - high status
#step 1 - sample
Like1s1 <- lm(Like_V ~ sampleD1 + sampleD2, data = mHS)
summary(Like1s1)
#step 2 - main effect
Like1s2 <- lm(Like_V ~ sampleD1 + sampleD2 + atone.r + esj.m, data = mHS, contrasts = contr1)
summary(Like1s2)
anova(Like1s1, Like1s2)
#step 3 - two way interactions
Like1s3 <- lm(Like_V ~ sampleD1 + sampleD2 + atone.r*esj.m, data = mHS, contrasts = contr1)
summary(Like1s3)
anova(Like1s2, Like1s3)


#mega sample - hierarchical regression - low status
#step 1
Like2s1 <- lm(Like_V ~ sampleD1 + sampleD2, data = mLS)
summary(Like2s1)
#step 2 - main effects
Like2s2 <- lm(Like_V ~ sampleD1 + sampleD2 + atone.r + esj.m, data = mLS, contrasts = contr1)
summary(Like2s2)
anova(Like2s1, Like2s2)
#step 3 - two way interactions
Like2s3 <- lm(Like_V ~ sampleD1 + sampleD2 + atone.r*esj.m, data = mLS, contrasts = contr1)
summary(Like2s3)
anova(Like2s2, Like2s3)


#mega sample - hierarchical regression - three way interaction
#step 1 - sample
Like3s1 <- lm(Like_V ~ sampleD1 + sampleD2, data = mega)
summary(Like3s1)
#step 2 - main effects
Like3s2 <- lm(Like_V ~ sampleD1 + sampleD2 + atone.r + esj.m + SES, data = mega, contrasts = contr1)
summary(Like3s2)
anova(Like3s1, Like3s2)
#step 3 - two way interactions
Like3s3 <- lm(Like_V ~ sampleD1 + sampleD2 + atone.r*esj.m + atone.r*SES + esj.m*SES, data = mega, contrasts = contr1)
summary(Like3s3)
anova(Like3s2, Like3s3)
#step 4 - three way interactions
Like3s4 <- lm(Like_V ~ sampleD1 + sampleD2 + atone.r*esj.m*SES, data = mega, contrasts = contr1)
summary(Like3s4)
anova(Like3s3, Like3s4)
Like3s5 <- lm(Like_V ~ sampleD1 + sampleD2 + atone.r*esj.m*SES10, data = mega, contrasts = contr1)
summary(Like3s5)


##########SA - Victim########
#Prolific sample 1, high status
SAV_prof1h <- lm(SA_V.rc ~ esj.m*atone.r, data = p1HS, contrasts = contr1)
summary(SAV_prof1h)

#Prolific sample 1, low status
SAV_prof1l <- lm(SA_V.rc ~ esj.m*atone.r, data = p1LS, contrasts = contr1)
summary(SAV_prof1l)

#Prolific sample 1, three way interaction
SAV_prof1 <- lm(SA_V.rc ~ esj.m*atone.r*SES, data = Prof1, contrasts = contr1)
summary(SAV_prof1)

#Prolific Sample 2, high status
SAV_prof2h <- lm(SA_V.rc ~ esj.m*atone.r, data = p2HS, contrasts= contr1)
summary(SAV_prof2h)

#Prolific sample 2, low status
SAV_prof2l <- lm(SA_V.rc ~ esj.m*atone.r, data = p2LS, contrasts= contr1)
summary(SAV_prof2l)

#Prolific sample 2, three way interaction
SAV_prof2 <- lm(SA_V.rc ~ esj.m*atone.r*SES, data = Prof2, contrasts = contr1)
summary(SAV_prof2)

#sona sample, high status
SAV_sonah <- lm(SA_V.rc ~ esj.m*atone.r, data = sHS, contrasts = contr1)
summary(SAV_sonah)

#sona sample, low status
SAV_sonal <- lm(SA_V.rc ~ esj.m*atone.r, data = sLS, contrasts = contr1)
summary(SAV_sonal)

#sona sample, three way interaction
SAV_sona <- lm(SA_V.rc ~ esj.m*atone.r*SES, data = sona, contrasts = contr1)
summary(SAV_sona)

#mega - hierarchical regression - high status
#step 1 - sample
SA1s1 <- lm(SA_V.rc ~ sampleD1 + sampleD2, data = mHS)
summary(SA1s1)
#step 2 - main effects
SA1s2 <- lm(SA_V.rc ~ sampleD1 + sampleD2 + esj.m + atone.r, data = mHS, contrasts = contr1)
summary(SA1s2)
anova(SA1s1, SA1s2)
#step 3 - interactions
SA1s3 <- lm(SA_V.rc ~ sampleD1 + sampleD2 + esj.m*atone.r, data = mHS, contrasts = contr1)
summary(SA1s3)
anova(SA1s2, SA1s3)

#mega - hierarchical regression - low status
#step - sample
SA2s1 <- lm(SA_V.rc ~ sampleD1 + sampleD2, data = mLS)
summary(SA2s1)
#step 2 - main effects
SA2s2 <- lm(SA_V.rc ~ sampleD1 + sampleD2 + esj.m + atone.r, data = mLS, contrasts = contr1)
summary(SA2s2)
anova(SA2s1, SA2s2)
#step 3 - two way interactions
SA2s3 <- lm(SA_V.rc ~ sampleD1 + sampleD2 + esj.m*atone.r, data= mLS, contrasts = contr1)
summary(SA2s3)
anova(SA2s2, SA2s3)

#mega - hierarchical regression - three way interaction
#step 1 - sample
SA3s1 <- lm(SA_V.rc ~ sampleD1 + sampleD2, data = mega)
summary(SA3s1)
#step 2 - main effects
SA3s2 <- lm(SA_V.rc ~ sampleD1 + sampleD2 + esj.m + atone.r + SES, data = mega, contrasts = contr1)
summary(SA3s2)
anova(SA3s1, SA3s2)
#step 3 - two way interactions
SA3s3 <- lm(SA_V.rc ~ sampleD1 + sampleD2 + esj.m*atone.r + esj.m*SES + atone.r*SES, data = mega, contrasts = contr1)
summary(SA3s3)
anova(SA3s2, SA3s3)
#step 4 - three way interactions
SA3s4 <- lm(SA_V.rc ~ sampleD1 + sampleD2 + esj.m*atone.r*SES, data = mega, contrasts = contr1)
summary(SA3s4)
anova(SA3s3, SA3s4)
SA3s5 <- lm(SA_V.rc ~ sampleD1 + sampleD2 + esj.m*atone.r*SES10, data = mega, contrasts = contr1)
summary(SA3s5)

########Empathy for victim#######
#Prolific sample 1, high status
EmpV_prof1h <- lm(Emp_V ~ esj.m*atone.r, data = p1HS, contrasts = contr1)
summary(EmpV_prof1h)

#Prolific sample 1, low status
EmpV_prof1l <- lm(Emp_V ~ esj.m*atone.r, data = p1LS, contrasts = contr1)
summary(EmpV_prof1l)

#Prolific sample 1, three way interaction
EmpV_prof1 <- lm(Emp_V ~ esj.m*atone.r*SES, data = Prof1, contrasts = contr1)
summary(EmpV_prof1)

#Prolific Sample 2, high status
EmpV_prof2h <- lm(Emp_V ~ esj.m*atone.r, data = p2HS, contrasts = contr1)
summary(EmpV_prof2h)

#Prolific Sample 2, low status
EmpV_prof2l <- lm(Emp_V ~ esj.m*atone.r, data = p2LS, contrasts = contr1)
summary(EmpV_prof2l)

#Prolific Sample 2, three way interaction
EmpV_prof2 <- lm(Emp_V ~ esj.m*atone.r*SES, data = Prof2, contrasts = contr1)
summary(EmpV_prof2)

#sona sample, high status
EmpV_sonah <- lm(Emp_V ~ esj.m*atone.r, data = sHS, contrasts = contr1)
summary(EmpV_sonah)

#sona sample, low status
EmpV_sonal <- lm(Emp_V ~ esj.m*atone.r, data= sLS, contrasts = contr1)
summary(EmpV_sonal)

#sona sample, three way interaction
EmpV_sona <- lm(Emp_V ~ esj.m*atone.r, data = sona, contrasts = contr1)
summary(EmpV_sona)

#mega sample - hierarchical regression - high status
#step 1 - sample
Emp1s1 <- lm(Emp_V ~ sampleD1 + sampleD2, data = mHS)
summary(Emp1s1)
#step 2 - main effects
Emp1s2 <- lm(Emp_V ~ sampleD1 + sampleD2 + esj.m + atone.r, data = mHS, contrasts = contr1)
summary(Emp1s2)
anova(Emp1s1, Emp1s2)
#step 3 - two way interactions
Emp1s3 <- lm(Emp_V ~ sampleD1 + sampleD2 + esj.m*atone.r, data = mHS, contrasts = contr1)
summary(Emp1s3)
anova(Emp1s2, Emp1s3)



#mega sample- hierarchical regression =- low status
#step 1 - sample
Emp2s1 <- lm(Emp_V ~ sampleD1 + sampleD2, data = mLS)
summary(Emp2s1)
#step 2 - main effects
Emp2s2 <- lm(Emp_V ~ sampleD1 + sampleD2 + esj.m + atone.r, data = mLS, contrasts = contr1)
summary(Emp2s2)
anova(Emp2s1, Emp2s2)
#step 3 - two way interactions
Emp2s3 <- lm(Emp_V ~ sampleD1 + sampleD2 + esj.m*atone.r, data = mLS, contrasts = contr1)
summary(Emp2s3)
anova(Emp2s2, Emp2s3)

#mega sample - hierarchical regression - three way interaction
#step 1 - sample
Emp3s1 <- lm(Emp_V ~ sampleD1 + sampleD2, data = mega)
summary(Emp3s1)
#step 2 - main effects
Emp3s2 <- lm(Emp_V ~ sampleD1 + sampleD2 + esj.m + atone.r + SES, data = mega, contrasts = contr1)
summary(Emp3s2)
anova(Emp3s1, Emp3s2)
#step 3 - two way interactions
Emp3s3 <- lm(Emp_V ~ sampleD1 + sampleD2 + esj.m*atone.r + esj.m*SES + atone.r*SES, data = mega, contrasts = contr1)
summary(Emp3s3)
anova(Emp3s2, Emp3s3)
#step 4 - three way interaction
Emp3s4 <- lm(Emp_V ~ sampleD1 + sampleD2 + esj.m*atone.r*SES, data = mega, contrasts = contr1)
summary(Emp3s4)
anova(Emp3s3, Emp3s4)

Emp3s5 <- lm(Emp_V ~ sampleD1 + sampleD2 + esj.m*atone.r*SES10, data = mega, contrasts = contr1)
summary(Emp3s5)

######Distress for the Victim######
#Prolific sample 1, high status
distV_prof1h <- lm(distV ~ esj.m*atone.r, data = p1HS, contrasts = contr1)
summary(distV_prof1h)

#Prolific sample 1, low status
distV_prof1l <- lm(distV ~ esj.m*atone.r, data = p1LS, contrasts = contr1)
summary(distV_prof1l)

#Prolific sample 1, three way interactions
distV_prof1 <- lm(distV ~ esj.m*atone.r*SES, data = Prof1, contrasts = contr1)
summary(distV_prof1)

#Prolific Sample 2, high status
distV_prof2h <- lm(distV ~ esj.m*atone.r, data = p2HS, contrasts = contr1)
summary(distV_prof2h)

#Prolific Sample 2, low status
distV_prof2l <- lm(distV ~ esj.m*atone.r, data = p2LS, contrasts = contr1)
summary(distV_prof2l)

#Proflific Sample 2, three way interaction
distV_prof2 <- lm(distV ~ esj.m*atone.r*SES, data = Prof2, contrasts = contr1)
summary(distV_prof2)

#sona sample, high status
distV_sonah <- lm(distV ~ esj.m*atone.r, data = sHS, contrasts = contr1)
summary(distV_sonah)

#sona sample, low status
distV_sonal <- lm(distV ~ esj.m*atone.r, data = sLS, contrasts = contr1)
summary(distV_sonal)

#sona sample, three way interaction
distV_sona <- lm(distV ~ esj.m*atone.r*SES, data = sona, contrasts = contr1)
summary(distV_sona)

#mega sample - hierarchical regression - high status
#step 1 - sample
distV1s1 <- lm(distV ~ sampleD1 + sampleD2, data = mHS)
summary(distV1s1)
#step 2 - main effects
distV1s2 <- lm(distV ~ sampleD1 + sampleD2 + esj.m + atone.r, data = mHS, contrasts = contr1)
summary(distV1s2)
anova(distV1s1, distV1s2)
#step 3 - two way interaction
distV1s3 <- lm(distV ~ sampleD1 + sampleD2 + esj.m*atone.r, data = mHS, contrasts = contr1)
summary(distV1s3)
anova(distV1s2, distV1s3)


#mega sample - hierarchical regression - low status
#step 1 - sample
distV2s1 <- lm(distV ~ sampleD1 + sampleD2, data = mLS)
summary(distV2s1)
#step 2 - main effects
distV2s2 <- lm(distV ~ sampleD1 + sampleD2 + esj.m + atone.r, data = mLS, contrasts = contr1)
summary(distV2s2)
anova(distV2s1, distV2s2)
#step 3 - two way interactions
distV2s3 <- lm(distV ~ sampleD1 + sampleD2 + esj.m*atone.r, data = mLS, contrasts = contr1)
summary(distV2s3)
anova(distV2s2, distV2s3)

#mega sample - three way interaction
#step 1 - sample
distV3s1 <- lm(distV ~ sampleD1 + sampleD2, data = mega)
summary(distV3s1)
#step 2 - main effects
distV3s2 <- lm(distV ~ sampleD1 + sampleD2 + esj.m + atone.r + SES, data = mega, contrasts = contr1)
summary(distV3s2)
anova(distV3s1, distV3s2)
#step 3 - two way interactions
distV3s3 <- lm(distV ~ sampleD1 + sampleD2 + esj.m*atone.r + esj.m*SES + atone.r*SES, data = mega, contrasts = contr1)
summary(distV3s3)
anova(distV3s2, distV3s3)
#step 4 - three way interactions
distV3s4 <- lm(distV ~ sampleD1 + sampleD2 + esj.m*atone.r*SES, data = mega, contrasts = contr1)
summary(distV3s4)
anova(distV3s3, distV3s4)

distV3s5 <- lm(distV ~ sampleD1 + sampleD2 + esj.m*atone.r*SES10, data = mega, contrasts = contr1)
summary(distV3s5)
plot(mHS$Like_V ~ mHS$atone.r)




############Figures###################


#Graphing the Severity interaction that occurs in the Low Status Condition
levels(mLS$atone.r)
mLS$Atonement_graph <- factor(dplyr::recode(mLS$Atonement, "0" = "Low", "1" = "Medium", "2" = "High"))
levels(mLS$Atonement)
m_graph <- lm(Sev ~ Atonement_graph*esj, data = mLS)

d_graph <- expand.grid(Sev = seq(min(mLS$Sev), max(mLS$Sev), 
                                           length = 80),
                       Atonement_graph = c("Low", "Medium","High"),
                       esj = seq(min(mLS$esj), max(mLS$esj), 
                                    length = 80))

d_graph <- ggplotPredict(m_graph, d_graph)

mLS %>%
  ggplot(aes(x = esj, y = Sev, color = Atonement_graph)) +
  geom_point(aes(shape = Atonement_graph)) +
  geom_smooth(data = d_graph, stat = "identity", 
              aes(y = Predicted, ymin = CILo, ymax = CIHi)) + 
  labs(x = "Economic System Justification", y = "Perceived Severity of the Incident") + # clarify axis name
  theme_minimal() +
  theme(
    #legend.position = c(.2, .93), # positioning legend
    legend.background = element_blank(), # removing background of legend
    legend.title = element_blank()) + # removing title of legend
  scale_color_brewer(palette = "Set1")

#Graphing the Victim Responsibility interaction in the High Status condition

mLS$Atonement_graph <- as.factor(dplyr::recode(mLS$Atonement, "0" = "Low", "1" = "Medium", "2" = "High"))
mLS$Atonement_str <- factor(mLS$Atonement_graph, levels = c("Low", "Medium", "High"))

mHS$Atonement_graph <- as.factor(dplyr::recode(mHS$Atonement, "0" = "Low", "1" = "Medium", "2" = "High"))
mHS$Atonement_str <- factor(mHS$Atonement_graph, levels = c("Low", "Medium", "High"))



m_graph <- lm(Vresp ~ Atonement_str*esj, data = mHS)

d_graph <- expand.grid(Vresp = seq(min(mHS$Vresp), max(mHS$Vresp), 
                                 length = 80),
                       Atonement_str = c("Low", "Medium","High"),
                       esj = seq(min(mHS$esj), max(mHS$esj), 
                                 length = 80))

d_graph <- ggplotPredict(m_graph, d_graph)

mHS %>%
  ggplot(aes(x = esj, y = Vresp, color = Atonement_str)) +
  geom_point(aes(shape = Atonement_str)) +
  geom_smooth(data = d_graph, stat = "identity", 
              aes(y = Predicted, ymin = CILo, ymax = CIHi)) + 
  labs(x = "Economic System Justification", y = "Perceived Responsibility of the Victim") + # clarify axis name
  theme_minimal() +
  theme(
    #legend.position = c(.2, .93), # positioning legend
    legend.background = element_blank(), # removing background of legend
    legend.title = element_blank()) + # removing title of legend
  scale_color_brewer(palette = "Set1")

plot(Vresp ~ atone.r, data = mHS)

#Graphing the Positive Personality interaction for Low Status Perps
TIPI2s3 <- lm(TIPI_V ~ sampleD1 + sampleD2 + esj.m*atone.r, data = mLS, contrasts = contr1)

m_graph1 <- lm(TIPI_V ~ Atonement_str*esj, data = mLS)

d_graph <- expand.grid(TIPI_V = seq(min(mLS$TIPI_V), max(mLS$TIPI_V), 
                                   length = 80),
                       Atonement_str = c("Low", "Medium","High"),
                       esj = seq(min(mLS$esj), max(mLS$esj), 
                                 length = 80))

d_graph <- ggplotPredict(m_graph, d_graph)

mLS %>%
  ggplot(aes(x = esj, y = TIPI_V, color = Atonement_str)) +
  geom_point(aes(shape = Atonement_str)) +
  geom_smooth(data = d_graph, stat = "identity", 
              aes(y = Predicted, ymin = CILo, ymax = CIHi)) + 
  labs(x = "Economic System Justification", y = "Perceived Positive Personality of the Victim") + # clarify axis name
  theme_minimal() +
  theme(
    #legend.position = c(.2, .93), # positioning legend
    legend.background = element_blank(), # removing background of legend
    legend.title = element_blank()) + # removing title of legend
  scale_color_brewer(palette = "Set1")


