### Set WD, then load in dataset and load packages -----------------------------
d <- read.csv("PSS_Prolific1_CLEAN.csv")
library(psych)
library(dplyr)

### Check it out ---------------------------------------------------------------
View(d)
describe(d)

### Convert Atonement to factor variable ---------------------------------------
d$Atonement_fact <- as.factor(d$Atonement)
levels(d$Atonement_fact)

### Reverse-code needed items --------------------------------------------------
## ESJ
d$ESJ4_r <- dplyr::recode(d$ESJ4, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ6_r <- dplyr::recode(d$ESJ6, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ8_r <- dplyr::recode(d$ESJ8, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ10_r <- dplyr::recode(d$ESJ10, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ13_r <- dplyr::recode(d$ESJ13, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ15_r <- dplyr::recode(d$ESJ15, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)
d$ESJ17_r <- dplyr::recode(d$ESJ17, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)

## Y4: Positive personality traits (P)
d$TIPI_P2_r <- dplyr::recode(d$TIPI_P2 , "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P4_r <- dplyr::recode(d$TIPI_P4, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P6_r <- dplyr::recode(d$TIPI_P6, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P8_r <- dplyr::recode(d$TIPI_P8, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P10_r <- dplyr::recode(d$TIPI_P10, "5" = 1, "4" = 2, "3" = 3, "2" = 4, 
                              "1" = 5)

## Y6: Severity (P)
d$Sev3_r <- dplyr::recode(d$Sev3_r , "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 
                            4, "2" = 6, "1" = 7)
d$Sev4_r <- dplyr::recode(d$Sev4_r, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)


### Create average columns -----------------------------------------------------
## ESJ -------------------------------------------------------------------------
# Add average column
d$ESJ_av <- rowMeans(d[,c(2,3,4,125,6,126,9,127,11,128,13,14,129,16,130,18,
                          131)], na.rm = T)

# Create data frame from selected columns
ESJ_d <- d[,c(2,3,4,125,6,126,9,127,11,128,13,14,129,16,130,18,131)]

# Calculate Cronbach's alpha from new data frame
alpha(ESJ_d)

# Alpha for ESJ = .86

## Y1 = Blame (P)---------------------------------------------------------------

# STANDARDIZE ALL VARIABLES (they're on different scales)

# First, create dataframe from raw varialbes
BlameP_d <- d[,c(27,28,29,30,31,36,37)]

# Use scale to standardize that dataframe
BlameP_d_z <- scale(BlameP_d)

# Find average of standardized variables and add column to original df
d$BlameP_z_av <- rowMeans(BlameP_d_z[,c(1,2,3,4,5,6,7)], na.rm = T)

# Calculate Cronbach's alpha from raw dataframe
alpha(BlameP_d)

# Alpha for Blame (P) = .90

## Y2 = Stigma (P) -------------------------------------------------------------
# Add average column
d$StigmaP_av <- rowMeans(d[,c(38,39,40,41,42)], na.rm = T)

# Create data frame from selected columns
StigmaP_d <- d[,c(38,39,40,41,42)]

# Calculate Cronbach's alpha from new data frame
alpha(StigmaP_d)

# Alpha for Stigma (P) = .96

## Y3 = Likability (P) ---------------------------------------------------------
# Add average column
d$LikabilityP_av <- rowMeans(d[,c(53,54,55,56,57)], na.rm = T)

# Create data frame from selected columns
LikabilityP_d <- d[,c(53,54,55,56,57)]

# Calculate Cronbach's alpha from new data frame
alpha(LikabilityP_d)

# Alpha for Stigma (P) = .75

## Y4 = Positive personality traits---------------------------------------------
# Add average column
d$PersonalityP_av <- rowMeans(d[,c(43,131,45,132,47,133,49,134,51,135)], 
                              na.rm = T)

# Create data frame from selected columns
PersonalityP_d <- d[,c(43,131,45,132,47,133,49,134,51,135)]

# Calculate Cronbach's alpha from new data frame
alpha(PersonalityP_d)

# Alpha for Personality (P) = .71

## Y5 = Empathic concern (P) ---------------------------------------------------
# Add average column
d$EmpathyP_av <- rowMeans(d[,c(58,59,62,67,72,74)], na.rm = T)

# Create data frame from selected columns
EmpathyP_d <- d[,c(58,59,62,67,72,74)]

# Calculate Cronbach's alpha from new data frame
alpha(EmpathyP_d)

# Alpha for Empathy (P) = .93

## Y6 = Severity (P) -----------------------------------------------------------
# Add average column
d$SeverityP_av <- rowMeans(d[,c(20,21,23,24,25)], na.rm = T)

# Create data frame from selected columns
SeverityP_d <- d[,c(20,21,23,24,25)]

# Calculate Cronbach's alpha from new data frame
alpha(SeverityP_d)

# Alpha for Severity (P) = .90

### Split dataset by status condition ------------------------------------------
d_lo <- d[which(d$SES == "0"),]
d_hi <- d[which(d$SES == "1"),]
