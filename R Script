### Set WD, then load in dataset and load packages -----------------------------
d <- read.csv("PSS_Prolific1_CLEAN.csv")
library(psych)
library(dplyr)
library(effectsize)

### Check it out ---------------------------------------------------------------
View(d)
describe(d)

### Convert Atonement to factor variable ---------------------------------------
d$Atonement_fact <- as.factor(d$Atonement)
levels(d$Atonement_fact)

### Reverse-code needed items --------------------------------------------------
## ESJ
d$ESJ4_r <- dplyr::recode(d$ESJ4, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ6_r <- dplyr::recode(d$ESJ6, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ8_r <- dplyr::recode(d$ESJ8, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ10_r <- dplyr::recode(d$ESJ10, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ13_r <- dplyr::recode(d$ESJ13, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)
d$ESJ15_r <- dplyr::recode(d$ESJ15, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)
d$ESJ17_r <- dplyr::recode(d$ESJ17, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                           "2" = 6, "1" = 7)

## Y4: Positive personality traits (P)
d$TIPI_P2_r <- dplyr::recode(d$TIPI_P2 , "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P4_r <- dplyr::recode(d$TIPI_P4, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P6_r <- dplyr::recode(d$TIPI_P6, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P8_r <- dplyr::recode(d$TIPI_P8, "5" = 1, "4" = 2, "3" = 3, "2" = 4, "1"
                             = 5)
d$TIPI_P10_r <- dplyr::recode(d$TIPI_P10, "5" = 1, "4" = 2, "3" = 3, "2" = 4, 
                              "1" = 5)

## Y6: Severity
d$Sev3_r <- dplyr::recode(d$Sev3_r , "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 
                            4, "2" = 6, "1" = 7)
d$Sev4_r <- dplyr::recode(d$Sev4_r, "7" = 1, "6" = 2, "5" = 3, "3" = 5, "4" = 4, 
                          "2" = 6, "1" = 7)

### Recode all Empathy (P) items to fix error ----------------------------------
## Empathy (P) was coded in Qualtrics as 1, 2, 3, 4, 6, 8, 7: Have to recode
d$P_empathy_1 <- dplyr::recode(d$P_empathy_1, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_2 <- dplyr::recode(d$P_empathy_2, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_3 <- dplyr::recode(d$P_empathy_3, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_4 <- dplyr::recode(d$P_empathy_4, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_5 <- dplyr::recode(d$P_empathy_5, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_6 <- dplyr::recode(d$P_empathy_6, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_7 <- dplyr::recode(d$P_empathy_7, "1" = 1, "2" = 2, "3" = 3, 
                            "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_8 <- dplyr::recode(d$P_empathy_8, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_9 <- dplyr::recode(d$P_empathy_9, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_10 <- dplyr::recode(d$P_empathy_10, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_11 <- dplyr::recode(d$P_empathy_11, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_12 <- dplyr::recode(d$P_empathy_12, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_13 <- dplyr::recode(d$P_empathy_13, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_14 <- dplyr::recode(d$P_empathy_14, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_15 <- dplyr::recode(d$P_empathy_15, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_16 <- dplyr::recode(d$P_empathy_16, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_17 <- dplyr::recode(d$P_empathy_17, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)
d$P_empathy_18 <- dplyr::recode(d$P_empathy_18, "1" = 1, "2" = 2, "3" = 3, 
                                "4" = 4, "6" = 5, "8" = 6, "7" = 7)

### Recode Like_P3 to fix error ------------------------------------------------
## Like_P3 was coded in Qualtrics as 1, 2, 3, 4, 12: Have to recode
d$Like_P3 <- dplyr::recode(d$Like_P3, "1" = 1, "2" = 2, "3" = 3, 
                               "4" = 4, "12" = 5)

### Create average columns -----------------------------------------------------
## ESJ -------------------------------------------------------------------------
# Add average column
d$ESJ_av <- rowMeans(d[,c(2,3,4,125,6,126,9,127,11,128,13,14,129,16,130,18,
                          131)], na.rm = T)

# Create data frame from selected columns
ESJ_d <- d[,c(2,3,4,125,6,126,9,127,11,128,13,14,129,16,130,18,131)]

# Calculate Cronbach's alpha from new data frame
alpha(ESJ_d)

# Alpha for ESJ = .86

## Y1 = Blame (P)---------------------------------------------------------------

# STANDARDIZE ALL VARIABLES (they're on different scales)

# First, create dataframe from raw varialbes
BlameP_d <- d[,c(27,28,29,30,31,36,37)]

# Use scale to standardize that dataframe
BlameP_d_z <- scale(BlameP_d)

# Find average of standardized variables and add column to original df
d$BlameP_z_av <- rowMeans(BlameP_d_z[,c(1,2,3,4,5,6,7)], na.rm = T)

# Calculate Cronbach's alpha from raw dataframe
alpha(BlameP_d)

# Alpha for Blame (P) = .90

## Y2 = Stigma (P) -------------------------------------------------------------
# Add average column
d$StigmaP_av <- rowMeans(d[,c(38,39,40,41,42)], na.rm = T)

# Create data frame from selected columns
StigmaP_d <- d[,c(38,39,40,41,42)]

# Calculate Cronbach's alpha from new data frame
alpha(StigmaP_d)

# Alpha for Stigma (P) = .96

## Y3 = Likability (P) ---------------------------------------------------------
# Add average column
d$LikabilityP_av <- rowMeans(d[,c(53,54,55,56,57)], na.rm = T)

# Create data frame from selected columns
LikabilityP_d <- d[,c(53,54,55,56,57)]

# Calculate Cronbach's alpha from new data frame
alpha(LikabilityP_d)

# Alpha for Stigma (P) = .75

## Y4 = Positive personality traits---------------------------------------------
# Add average column
d$PersonalityP_av <- rowMeans(d[,c(43,132,45,133,47,134,49,135,51,136)], 
                              na.rm = T)

# Create data frame from selected columns
PersonalityP_d <- d[,c(43,132,45,133,47,134,49,135,51,136)]

# Calculate Cronbach's alpha from new data frame
alpha(PersonalityP_d)

# Alpha for Personality (P) = .71

## Y5 = Empathic concern (P) ---------------------------------------------------
# Add average column
d$EmpathyP_av <- rowMeans(d[,c(58,59,62,67,72,74)], na.rm = T)

# Create data frame from selected columns
EmpathyP_d <- d[,c(58,59,62,67,72,74)]

# Calculate Cronbach's alpha from new data frame
alpha(EmpathyP_d)

# Alpha for Empathy (P) = .93

## Y6 = Severity (P) -----------------------------------------------------------
# Add average column
d$SeverityP_av <- rowMeans(d[,c(20,21,23,24,25)], na.rm = T)

# Create data frame from selected columns
SeverityP_d <- d[,c(20,21,23,24,25)]

# Calculate Cronbach's alpha from new data frame
alpha(SeverityP_d)

# Alpha for Severity (P) = .90

### Histograms and boxplots ----------------------------------------------------
## ESJ - Looks good
hist(d$ESJ_av)
boxplot(d$ESJ_av)

## Blame (P) - Three low outliers (rows = 108, 136, 158; value = -2.67 SDs; do 
## not remove)
hist(d$BlameP_z_av)
boxplot(d$BlameP_z_av)
boxplot.stats(d$BlameP_z_av)$out

## Stigma (P) - Looks good
hist(d$StigmaP_av)
boxplot(d$StigmaP_av)

## Likability (P) - 15 high outliers (rows = 17, 20, 32, 43, 47, 71, 75, 78, 
## 106, 116, 120, 158, 208, 212, 279; values = 5.20 - 6.40)
hist(d$LikabilityP_av)
boxplot(d$LikabilityP_av)
boxplot.stats(d$LikabilityP_av)$out

# Find value for 3 SDs above the mean (value = 5.84)
mean(d$LikabilityP_av) + (3*sd(d$LikabilityP_av))

# Rows 158 and 208 have values over 5.8 (values = 6.25, 6.40): Remove values 
# for those rows
d$LikabilityP_av[which(d$ResponseId == "158")] <- NA
d$LikabilityP_av[which(d$ResponseId == "208")] <- NA

## Personality (P) - Two outliers high and two low (IDs = 9, 62, 68, 158; 
## values = 1.7 and 4.6)
hist(d$PersonalityP_av)
boxplot(d$PersonalityP_av)
boxplot.stats(d$PersonalityP_av)$out

# Find value for 3 SDs above the mean (value = 4.75)
mean(d$PersonalityP_av) + (3*sd(d$PersonalityP_av))

# Find value for 3 SDs below the mean (value = 1.62)
mean(d$PersonalityP_av) - (3*sd(d$PersonalityP_av))

# No values are outside of 3 SDs away from the mean: Don't remove

## Empathy (P) - Looks good
hist(d$EmpathyP_av)
boxplot(d$EmpathyP_av)

### Mean Center ESJ ------------------------------------------------------------
d$ESJ_av_c <- d$ESJ_av - mean(d$ESJ_av)

### Set up Helmert contrasts ---------------------------------------------------
## Reverse-code Atonement
d$Atonement_f_r <- dplyr::recode(d$Atonement_fact, "2" = 0, "1" = 1, "0" = 2)

## Change reverse-coded Atonement to factor variable
d$Atonement_fact_r <- as.factor(d$Atonement_f_r)

## Establish contrasts
my.contrasts <- list(Atonement_fact_r = contr.helmert)

### Split dataset by status condition ------------------------------------------
d_lo <- d[which(d$SES == "0"),]
d_hi <- d[which(d$SES == "1"),]

### MAIN ANALYSES - REGRESSION -------------------------------------------------
## RQ1A
# Y1: Blame
RQ1A_Y1 <- lm(data = d_hi, BlameP_z_av ~ ESJ_av_c*Atonement_fact_r, contrasts = 
                my.contrasts)
summary(RQ1A_Y1)
eta_squared(car::Anova(RQ1A_Y1, type = 3))

#Y2: Stigma
RQ1A_Y2 <- lm(data = d_hi, StigmaP_av ~ ESJ_av*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y2)
eta_squared(car::Anova(RQ1A_Y2, type = 3))

#Y3: Likability
RQ1A_Y3 <- lm(data = d_hi, LikabilityP_av ~ ESJ_av*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y3)
eta_squared(car::Anova(RQ1A_Y3, type = 3))

#Y4: Personality
RQ1A_Y4 <- lm(data = d_hi, PersonalityP_av ~ ESJ_av*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y4)
eta_squared(car::Anova(RQ1A_Y4, type = 3))

#Y5: Empathy
RQ1A_Y5 <- lm(data = d_hi, EmpathyP_av ~ ESJ_av*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1A_Y5)
eta_squared(car::Anova(RQ1A_Y5, type = 3))

## RQ1B
# Y1: Blame
RQ1B_Y1 <- lm(data = d_lo, BlameP_z_av ~ ESJ_av_c*Atonement_fact_r, contrasts = 
                my.contrasts)
summary(RQ1B_Y1)
eta_squared(car::Anova(RQ1B_Y1, type = 3))

#Y2: Stigma
RQ1B_Y2 <- lm(data = d_lo, StigmaP_av ~ ESJ_av*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y2)
eta_squared(car::Anova(RQ1B_Y2, type = 3))

#Y3: Likability
RQ1B_Y3 <- lm(data = d_lo, LikabilityP_av ~ ESJ_av*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y3)
eta_squared(car::Anova(RQ1B_Y3, type = 3))

#Y4: Personality
RQ1B_Y4 <- lm(data = d_lo, PersonalityP_av ~ ESJ_av*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y4)
eta_squared(car::Anova(RQ1B_Y4, type = 3))

#Y5: Empathy
RQ1B_Y5 <- lm(data = d_lo, EmpathyP_av ~ ESJ_av*Atonement_fact_r, contrasts =
                my.contrasts)
summary(RQ1B_Y5)
eta_squared(car::Anova(RQ1B_Y5, type = 3))





############################################Allison's Script############################################
#This is analyses related to the Vic DVs#
#Also, note that Kira and I have different R quirks, so the way we script things does not totaly align, 
#but that's part of what makes us such a good team XD


#load libraries
library(psych)

#Import data sets

library(readxl)
Prof1 <- read_excel("C:/Users/allis/Documents/Western Washington/Research/Redemption Narratives/Perp Study Data Analysis/PSS_Prolific1_CLEAN.xlsx")


#####Scale Scoring####

#economic system justification
#reverse score necessary items
Prof1$ESJ4_r <- 8 - Prof1$ESJ4
Prof1$ESJ6_r <- 8 - Prof1$ESJ6
Prof1$ESJ8_r <- 8 - Prof1$ESJ8
Prof1$ESJ10_r <- 8 - Prof1$ESJ10
Prof1$ESJ13_r <- 8 - Prof1$ESJ13
Prof1$ESJ15_r <- 8 - Prof1$ESJ15
Prof1$ESJ17_r <- 8 - Prof1$ESJ17
Prof1$esj <- (Prof1$ESJ1 + Prof1$ESJ2 + Prof1$ESJ3 + Prof1$ESJ4_r + 
              Prof1$ESJ5 + Prof1$ESJ6_r + Prof1$ESJ7 + 
              Prof1$ESJ8_r + Prof1$ESJ9 + Prof1$ESJ10_r + Prof1$ESJ11 + 
              Prof1$ESJ12 + Prof1$ESJ13_r + Prof1$ESJ14 + Prof1$ESJ15_r + 
              Prof1$ESJ16 + Prof1$ESJ17_r)/17

hist(Prof1$esj) #pretty normal distribution - not quite hitting full rnage (no 6 or 7s, but overall good)

esj_a <- subset(Prof1, select = c(ESJ1, ESJ2, ESJ3, ESJ4_r, ESJ5, ESJ6_r, ESJ7, 
                                ESJ8_r, ESJ9, ESJ10_r, ESJ11, ESJ12, ESJ13_r, 
                                ESJ14, ESJ15_r, ESJ16, ESJ17_r))
alpha(esj_a)

#mean center
Prof1$esj.m <- scale(Prof1$esj, center = T)

#z-score
Prof1$esj.z <- scale(Prof1$esj, center = T, scale = T)



#Perp Response
Prof1$Presp <- (Prof1$P_resp1 + Prof1$P_resp2 + Prof1$P_resp3 + Prof1$P_resp4 + Prof1$P_resp5)/5
hist(Prof1$Presp)

Presp_a <- subset(Prof1, select = c(P_resp1, P_resp2, P_resp3, P_resp4, P_resp5))
alpha(Presp_a)

#Vic Response
Prof1$Vresp <- (Prof1$V_resp1 + Prof1$V_resp2 + Prof1$V_resp3 + Prof1$V_resp4)/4
hist(Prof1$Vresp)


Vresp_a <- subset(Prof1, select = c(V_resp1, V_resp2, V_resp3, V_resp4))
alpha(Vresp_a)


#TIPI- Perpetrator
Prof1$TIPI_P2_r <- 6 - Prof1$TIPI_P2
Prof1$TIPI_P4_r <- 6 - Prof1$TIPI_P4
Prof1$TIPI_P6_r <- 6 - Prof1$TIPI_P6
Prof1$TIPI_P8_r <- 6 - Prof1$TIPI_P8
Prof1$TIPI_P10_r <- 6 - Prof1$TIPI_P10

Prof1$TIPI_P <- (Prof1$TIPI_P1 + Prof1$TIPI_P2_r + Prof1$TIPI_P3 + Prof1$TIPI_P4_r + 
                   Prof1$TIPI_P5 + Prof1$TIPI_P6_r + Prof1$TIPI_P7 + Prof1$TIPI_P8_r + 
                   Prof1$TIPI_P9 + Prof1$TIPI_P10_r)/10
hist(Prof1$TIPI_P)

TIPI_Pos <- subset(Prof1, select = c(TIPI_P1, TIPI_P2_r, TIPI_P3, TIPI_P4_r, 
                                     TIPI_P5, TIPI_P6_r, TIPI_P7, TIPI_P8_r,
                                     TIPI_P9, TIPI_P10_r))
alpha(TIPI_Pos) ##When I ran cronbachs, it looks like 6 does not fit in. Cronbach
                ##is indicating that it should not be reverse scored. Could be an
                ##argument to drop the item

#TIPI - Victim
Prof1$TIPI_V2_r <- 8 - Prof1$TIPI_V2
Prof1$TIPI_V4_r <- 8 - Prof1$TIPI_V4
Prof1$TIPI_V6_r <- 8 - Prof1$TIPI_V6
Prof1$TIPI_V8_r <- 8 - Prof1$TIPI_V8
Prof1$TIPI_V10_r <- 8 - Prof1$TIPI_V10

Prof1$TIPI_V <- (Prof1$TIPI_V1 + Prof1$TIPI_V2_r + Prof1$TIPI_V3 + Prof1$TIPI_V4_r + 
                   Prof1$TIPI_V5 + Prof1$TIPI_V6_r + Prof1$TIPI_V7 + Prof1$TIPI_V8_r + 
                   Prof1$TIPI_V9 + Prof1$TIPI_V10_r)/10
hist(Prof1$TIPI_V)


TIPI_Vic <- subset(Prof1, select = c(TIPI_V1, TIPI_V2_r, TIPI_V3, TIPI_V4_r, 
                                     TIPI_V5, TIPI_V6_r, TIPI_V7, TIPI_V8_r,
                                     TIPI_V9, TIPI_V10_r))
alpha(TIPI_Vic) #six is a bad item. 

##ASK BRI IF WE SHOULD DROP ITEM 6 - can drop from both V and P if we want#########

#Likeability of victim
Prof1$Like_V <- (Prof1$Like_V1 + Prof1$Like_V2 + Prof1$Like_V3 + Prof1$Like_V4 + 
                   Prof1$Like_V5)/5

Like_Va <- subset(Prof1, select = c(Like_V1, Like_V2, Like_V3, Like_V4, Like_V5))
alpha(Like_Va) #very low alpha - this scale needs to be changed
#Items 3, 4 and 5 were presented weird to participants. ASK BRI whether to keep or trash

#SA - Victim
Prof1$SA_V <- (Prof1$SA_V_1 + Prof1$SA_V_2 + Prof1$SA_V_3 + Prof1$SA_V_4 + 
                 Prof1$SA_V_5)/5
SA_va <- subset(Prof1, select = c(SA_V_1, SA_V_2, SA_V_3, SA_V_4, SA_V_5))
alpha(SA_va)



#Empathy for the Victim - these are just the 6 empathy items
##there are still some distress and filler items not included in this summation
Prof1$Emp_V <- (Prof1$Emp_V_1 + Prof1$Emp_V_2 + Prof1$Emp_V_5 + Prof1$Emp_V_10 +
                  Prof1$Emp_V_15 + Prof1$Emp_V_17)/6
hist(Prof1$Emp_V)

Emp_Va <- subset(Prof1, select = c(Emp_V_1, Emp_V_2, Emp_V_5, Emp_V_10, 
                                   Emp_V_15, Emp_V_17))
alpha(Emp_Va)








####Data Subsets###
#make atonement condition a factor
#reverse code atonement so that 2 = low, 1 = med, and 0 = high
Prof1$atone.r <- 2-Prof1$Atonement
Prof1$atone.r <- factor(Prof1$Atonement, 
                           levels = c("0", "1", "2"),
                           labels = c("High", "Med", "Low"))

#High Status Condition
HS <- subset(Prof1, SES == 1)

#Low status Condition
LS <- subset(Prof1, SES == 0)







########################################Analysis########################################
#Setting Helmert Contrasts
contr1 <- list(atone.r = contr.helmert)
  #we are using the reverse coded atonement to create the contrasts. 
  #this will contrast 0 and 1 to 2 (high/med to low) and 0 to 1 (high to med)


###Research Question 2 and 3: Looking at DVs relevant to the Victim####
#Victim response
Vresp_anal1 <- lm(Vresp ~ esj.m*atone.r, data = HS, contrasts = contr1)
summary(Vresp_anal1)

#TIPI - Vict
TIPIv_anal1 <- lm(TIPI_V ~ esj.m*atone.r, data = HS, contrasts = contr1)
summary(TIPIv_anal1)


#Likeability of Vic - need to come back to after fixing scale

#SA - Victim
SAV_anal1 <- lm(SA_V ~ esj.m*atone.r, data = HS, contrasts = contr1)
summary(SAV_anal1)


#Empathy for victim
EmpV_anal1 <- lm(Emp_V ~ esj.m*atone.r, data = HS, contrasts = contr1)
summary(EmpV_anal1)
